-------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------- Livelock (активное бездействие) -----------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

using statement merging
Starting ExceptionHandler with pid 1
  1:	proc  0 (:init::1) mainThreads.pml:694 (state 1)	[(run ExceptionHandler())]
Starting GUIThread with pid 2
  2:	proc  0 (:init::1) mainThreads.pml:695 (state 2)	[(run GUIThread())]
              TrikGui started  3:	proc  2 (GUIThread:1) mainThreads.pml:605 (state 1)	[printf('TrikGui started')]
              
  3:	proc  2 (GUIThread:1) mainThreads.pml:605 (state 2)	[printf('\\n')]
Starting User with pid 3
  4:	proc  0 (:init::1) mainThreads.pml:696 (state 3)	[(run User())]
  5:	proc  3 (User:1) mainThreads.pml:80 (state 1)	[GUIThreadEvents!4]
  6: proc 3 terminates
  7:	proc  2 (GUIThread:1) mainThreads.pml:606 (state 3)	[mInEventDrivenMode = 0]
              Starting TrikScriptRunner worker thread  8:	proc  2 (GUIThread:1) mainThreads.pml:612 (state 4)	[printf('Starting TrikScriptRunner worker thread')]
              
  8:	proc  2 (GUIThread:1) mainThreads.pml:612 (state 5)	[printf('\\n')]
Starting scriptWorkerThread with pid 3
  9:	proc  2 (GUIThread:1) mainThreads.pml:613 (state 6)	[(run scriptWorkerThread())]
 10:	proc  3 (scriptWorkerThread:1) mainThreads.pml:578 (state 1)	[mResetStarted = 0]
 11:	proc  3 (scriptWorkerThread:1) mainThreads.pml:579 (state 2)	[mState = 0]
 12:	proc  2 (GUIThread:1) mainThreads.pml:615 (state 7)	[GUIThreadEvents?signal]
 13:	proc  2 (GUIThread:1) mainThreads.pml:617 (state 8)	[((signal==runScript))]
              TrikScriptRunner: new script 13:	proc  2 (GUIThread:1) mainThreads.pml:619 (state 9)	[printf('TrikScriptRunner: new script')]
              
 13:	proc  2 (GUIThread:1) mainThreads.pml:619 (state 10)	[printf('\\n')]
 14:	proc  2 (GUIThread:1) mainThreads.pml:328 (state 11)	[(1)]
 15:	proc  2 (GUIThread:1) mainThreads.pml:329 (state 12)	[(1)]
 16:	proc  2 (GUIThread:1) mainThreads.pml:332 (state 15)	[((mState==0))]
 17:	proc  2 (GUIThread:1) mainThreads.pml:347 (state 123)	[(1)]
              ScriptEngineWorker: starting script 17:	proc  2 (GUIThread:1) mainThreads.pml:623 (state 125)	[printf('ScriptEngineWorker: starting script')]
              
 17:	proc  2 (GUIThread:1) mainThreads.pml:623 (state 126)	[printf('\\n')]
 18:	proc  2 (GUIThread:1) mainThreads.pml:624 (state 127)	[mState = 1]
 19:	proc  2 (GUIThread:1) mainThreads.pml:627 (state 128)	[threadId = 0]
 20:	proc  2 (GUIThread:1) mainThreads.pml:217 (state 129)	[assert((2>0))]
 20:	proc  2 (GUIThread:1) mainThreads.pml:219 (state 130)	[i = 0]
 21:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 131)	[((i<2))]
 21:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 132)	[abortEvaluationInvoked[i] = 0]
 21:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 133)	[i = (i+1)]
 22:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 131)	[((i<2))]
 22:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 132)	[abortEvaluationInvoked[i] = 0]
 22:	proc  2 (GUIThread:1) mainThreads.pml:220 (state 133)	[i = (i+1)]
 23:	proc  2 (GUIThread:1) mainThreads.pml:221 (state 134)	[((i==2))]
 24:	proc  2 (GUIThread:1) mainThreads.pml:80 (state 141)	[scriptWorkerThreadEvents!7]
 25:	proc  3 (scriptWorkerThread:1) mainThreads.pml:581 (state 3)	[scriptWorkerThreadEvents?signal]
 26:	proc  3 (scriptWorkerThread:1) mainThreads.pml:583 (state 4)	[((signal==INVOKEdoRun))]
 27:	proc  3 (scriptWorkerThread:1) mainThreads.pml:584 (state 5)	[mErrorMessage = 0]
 28:	proc  3 (scriptWorkerThread:1) mainThreads.pml:217 (state 6)	[assert((2>0))]
 28:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 7)	[i = 0]
 29:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 8)	[((i<2))]
 29:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 9)	[mFinishedThreads[i] = 0]
 29:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 10)	[i = (i+1)]
 30:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 8)	[((i<2))]
 30:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 9)	[mFinishedThreads[i] = 0]
 30:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 10)	[i = (i+1)]
 31:	proc  3 (scriptWorkerThread:1) mainThreads.pml:221 (state 11)	[((i==2))]
 32:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 15)	[break]
 33:	proc  3 (scriptWorkerThread:1) mainThreads.pml:217 (state 18)	[assert((2>0))]
 33:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 19)	[i = 0]
 34:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 20)	[((i<2))]
 34:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 21)	[mPreventFromStart[i] = 0]
 34:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 22)	[i = (i+1)]
 35:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 20)	[((i<2))]
 35:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 21)	[mPreventFromStart[i] = 0]
 35:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 22)	[i = (i+1)]
 36:	proc  3 (scriptWorkerThread:1) mainThreads.pml:221 (state 23)	[((i==2))]
 37:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 27)	[break]
 38:	proc  3 (scriptWorkerThread:1) mainThreads.pml:587 (state 30)	[timerTimeout = 0]
 39:	proc  3 (scriptWorkerThread:1) mainThreads.pml:588 (state 31)	[loopStopWaiting = 0]
 40:	proc  3 (scriptWorkerThread:1) mainThreads.pml:217 (state 32)	[assert((2>0))]
 40:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 33)	[i = 0]
 41:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 34)	[((i<2))]
 41:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 35)	[isAutonomousCycle[i] = 0]
 41:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 36)	[i = (i+1)]
 42:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 34)	[((i<2))]
 42:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 35)	[isAutonomousCycle[i] = 0]
 42:	proc  3 (scriptWorkerThread:1) mainThreads.pml:220 (state 36)	[i = (i+1)]
 43:	proc  3 (scriptWorkerThread:1) mainThreads.pml:221 (state 37)	[((i==2))]
 44:	proc  3 (scriptWorkerThread:1) mainThreads.pml:219 (state 41)	[break]
 45:	proc  3 (scriptWorkerThread:1) mainThreads.pml:106 (state 44)	[catch!10]
 46:	proc  1 (ExceptionHandler:1) mainThreads.pml:680 (state 1)	[catch?FailedToOpenFileException]
 47:	proc  1 (ExceptionHandler:1) mainThreads.pml:682 (state 2)	[catch!returnControl]
 48:	proc  3 (scriptWorkerThread:1) mainThreads.pml:428 (state 46)	[catch?returnControl]
 49:	proc  3 (scriptWorkerThread:1) mainThreads.pml:432 (state 50)	[(1)]
 50:	proc  3 (scriptWorkerThread:1) mainThreads.pml:362 (state 60)	[(1)]
 51:	proc  3 (scriptWorkerThread:1) mainThreads.pml:363 (state 61)	[(1)]
 51:	proc  3 (scriptWorkerThread:1) mainThreads.pml:365 (state 62)	[tmp = 0]
 52:	proc  3 (scriptWorkerThread:1) mainThreads.pml:112 (state 63)	[assert((-(1)<=(2-1)))]
 52:	proc  3 (scriptWorkerThread:1) mainThreads.pml:113 (state 64)	[tmp = -(1)]
 53:	proc  3 (scriptWorkerThread:1) mainThreads.pml:115 (state 65)	[((tmp<(2-1)))]
 54:	proc  3 (scriptWorkerThread:1) mainThreads.pml:117 (state 66)	[goto :b21]
 55:	proc  3 (scriptWorkerThread:1) mainThreads.pml:114 (state 74)	[break]
 56:	proc  3 (scriptWorkerThread:1) mainThreads.pml:86 (state 77)	[assert(mutexInfo[0].forThread[_pid])]
 57:	proc  3 (scriptWorkerThread:1) mainThreads.pml:87 (state 78)	[((mResetMutex==1))]
 57:	proc  3 (scriptWorkerThread:1) mainThreads.pml:88 (state 79)	[mutexInfo[0].forThread[_pid] = 0]
 57:	proc  3 (scriptWorkerThread:1) mainThreads.pml:89 (state 80)	[mResetMutex = (mResetMutex-1)]
 58:	proc  3 (scriptWorkerThread:1) mainThreads.pml:373 (state 94)	[else]
 59:	proc  3 (scriptWorkerThread:1) mainThreads.pml:373 (state 95)	[(1)]
 60:	proc  3 (scriptWorkerThread:1) mainThreads.pml:86 (state 98)	[assert(mutexInfo[1].forThread[_pid])]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:87 (state 99)	[((mThreadsMutex==1))]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:88 (state 100)	[mutexInfo[1].forThread[_pid] = 0]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:89 (state 101)	[mThreadsMutex = (mThreadsMutex-1)]
 62:	proc  3 (scriptWorkerThread:1) mainThreads.pml:384 (state 125)	[else]
 63:	proc  3 (scriptWorkerThread:1) mainThreads.pml:384 (state 126)	[(1)]
 64:	proc  3 (scriptWorkerThread:1) mainThreads.pml:394 (state 147)	[else]
 65:	proc  3 (scriptWorkerThread:1) mainThreads.pml:394 (state 148)	[(1)]
                  Starting new thread ... with engine ... 65:	proc  3 (scriptWorkerThread:1) mainThreads.pml:396 (state 151)	[printf('Starting new thread ... with engine ...')]
                  
 65:	proc  3 (scriptWorkerThread:1) mainThreads.pml:396 (state 152)	[printf('\\n')]
 65:	proc  3 (scriptWorkerThread:1) mainThreads.pml:398 (state 153)	[myThread = 0]
 66:	proc  3 (scriptWorkerThread:1) mainThreads.pml:401 (state 168)	[((threadId!=-(1)))]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:401 (state 169)	[(1)]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:403 (state 172)	[myThread = threadId]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:404 (state 173)	[mThreads[myThread] = 1]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:405 (state 174)	[abortEvaluationInvoked[myThread] = 0]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:406 (state 175)	[mThreadCount = (mThreadCount+1)]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:407 (state 176)	[assert((mThreadCount<=2))]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:408 (state 177)	[assert((mThreadCount>=1))]
 68:	proc  3 (scriptWorkerThread:1) mainThreads.pml:353 (state 178)	[i = 0]
 69:	proc  3 (scriptWorkerThread:1) mainThreads.pml:354 (state 179)	[(((i<2)&&mThreads[i]))]
 69:	proc  3 (scriptWorkerThread:1) mainThreads.pml:354 (state 180)	[i = (i+1)]
 70:	proc  3 (scriptWorkerThread:1) mainThreads.pml:355 (state 181)	[(((i<2)&&!(mThreads[i])))]
 70:	proc  3 (scriptWorkerThread:1) mainThreads.pml:355 (state 182)	[threadId = i]
 71:	proc  3 (scriptWorkerThread:1) mainThreads.pml:353 (state 189)	[break]
 72:	proc  3 (scriptWorkerThread:1) mainThreads.pml:411 (state 192)	[mFinishedThreads[myThread] = 0]
 73:	proc  3 (scriptWorkerThread:1) mainThreads.pml:97 (state 193)	[assert((mThreadsMutex==0))]
 73:	proc  3 (scriptWorkerThread:1) mainThreads.pml:98 (state 194)	[assert(!(mutexInfo[1].forThread[_pid]))]
 73:	proc  3 (scriptWorkerThread:1) mainThreads.pml:99 (state 195)	[mutexInfo[1].forThread[_pid] = 1]
 73:	proc  3 (scriptWorkerThread:1) mainThreads.pml:100 (state 196)	[mThreadsMutex = (mThreadsMutex+1)]
Starting engineThread with pid 4
 74:	proc  3 (scriptWorkerThread:1) mainThreads.pml:413 (state 199)	[(run engineThread(myThread))]
 75:	proc  3 (scriptWorkerThread:1) mainThreads.pml:80 (state 200)	[engineThreadEvents[myThread]!5]
                  Threading: started thread ... with engine ... thread object ... 76:	proc  3 (scriptWorkerThread:1) mainThreads.pml:417 (state 202)	[printf('Threading: started thread ... with engine ... thread object ...')]
                  
 76:	proc  3 (scriptWorkerThread:1) mainThreads.pml:417 (state 203)	[printf('\\n')]
 77:	proc  4 (engineThread:1) mainThreads.pml:499 (state 1)	[engineThreadEvents[id]?signal]
 78:	proc  4 (engineThread:1) mainThreads.pml:501 (state 2)	[((signal==start))]
                      Started thread ScriptThread 78:	proc  4 (engineThread:1) mainThreads.pml:502 (state 3)	[printf('Started thread ScriptThread')]
                      
 78:	proc  4 (engineThread:1) mainThreads.pml:502 (state 4)	[printf('\\n')]
 79:	proc  4 (engineThread:1) mainThreads.pml:503 (state 5)	[(1)]
 80:	proc  4 (engineThread:1) mainThreads.pml:508 (state 6)	[(!(abortEvaluationInvoked[id]))]
 81:	proc  4 (engineThread:1) mainThreads.pml:142 (state 192)	[(1)]
 82:	proc  4 (engineThread:1) mainThreads.pml:143 (state 193)	[(1)]
 82:	proc  4 (engineThread:1) mainThreads.pml:145 (state 194)	[tmp = 0]
 83:	proc  4 (engineThread:1) mainThreads.pml:112 (state 195)	[assert((-(1)<=(2-1)))]
 83:	proc  4 (engineThread:1) mainThreads.pml:113 (state 196)	[tmp = -(1)]
 84:	proc  4 (engineThread:1) mainThreads.pml:115 (state 197)	[((tmp<(2-1)))]
 85:	proc  4 (engineThread:1) mainThreads.pml:118 (state 199)	[tmp = (tmp+1)]
 86:	proc  4 (engineThread:1) mainThreads.pml:115 (state 197)	[((tmp<(2-1)))]
 87:	proc  4 (engineThread:1) mainThreads.pml:117 (state 198)	[goto :b5]
 88:	proc  4 (engineThread:1) mainThreads.pml:114 (state 206)	[break]
 89:	proc  4 (engineThread:1) mainThreads.pml:86 (state 209)	[assert(mutexInfo[1].forThread[_pid])]
 90:	proc  4 (engineThread:1) mainThreads.pml:87 (state 210)	[((mThreadsMutex==1))]
 90:	proc  4 (engineThread:1) mainThreads.pml:88 (state 211)	[mutexInfo[1].forThread[_pid] = 0]
 90:	proc  4 (engineThread:1) mainThreads.pml:89 (state 212)	[mThreadsMutex = (mThreadsMutex-1)]
 91:	proc  4 (engineThread:1) mainThreads.pml:97 (state 215)	[assert((mThreadsMutex==0))]
 91:	proc  4 (engineThread:1) mainThreads.pml:98 (state 216)	[assert(!(mutexInfo[1].forThread[_pid]))]
 91:	proc  4 (engineThread:1) mainThreads.pml:99 (state 217)	[mutexInfo[1].forThread[_pid] = 1]
 91:	proc  4 (engineThread:1) mainThreads.pml:100 (state 218)	[mThreadsMutex = (mThreadsMutex+1)]
 92:	proc  4 (engineThread:1) mainThreads.pml:152 (state 223)	[else]
 93:	proc  4 (engineThread:1) mainThreads.pml:152 (state 224)	[(1)]
 94:	proc  3 (scriptWorkerThread:1) mainThreads.pml:97 (state 204)	[assert((mResetMutex==0))]
 94:	proc  3 (scriptWorkerThread:1) mainThreads.pml:98 (state 205)	[assert(!(mutexInfo[0].forThread[_pid]))]
 94:	proc  3 (scriptWorkerThread:1) mainThreads.pml:99 (state 206)	[mutexInfo[0].forThread[_pid] = 1]
 94:	proc  3 (scriptWorkerThread:1) mainThreads.pml:100 (state 207)	[mResetMutex = (mResetMutex+1)]
 95:	proc  3 (scriptWorkerThread:1) mainThreads.pml:419 (state 210)	[(1)]
 96:	proc  4 (engineThread:1) mainThreads.pml:86 (state 227)	[assert(mutexInfo[1].forThread[_pid])]
 97:	proc  4 (engineThread:1) mainThreads.pml:87 (state 228)	[((mThreadsMutex==1))]
 97:	proc  4 (engineThread:1) mainThreads.pml:88 (state 229)	[mutexInfo[1].forThread[_pid] = 0]
 97:	proc  4 (engineThread:1) mainThreads.pml:89 (state 230)	[mThreadsMutex = (mThreadsMutex-1)]
 98:	proc  4 (engineThread:1) mainThreads.pml:97 (state 215)	[assert((mThreadsMutex==0))]
 98:	proc  4 (engineThread:1) mainThreads.pml:98 (state 216)	[assert(!(mutexInfo[1].forThread[_pid]))]
 98:	proc  4 (engineThread:1) mainThreads.pml:99 (state 217)	[mutexInfo[1].forThread[_pid] = 1]
 98:	proc  4 (engineThread:1) mainThreads.pml:100 (state 218)	[mThreadsMutex = (mThreadsMutex+1)]
 99:	proc  4 (engineThread:1) mainThreads.pml:152 (state 223)	[else]
100:	proc  3 (scriptWorkerThread:1) mainThreads.pml:592 (state 212)	[mState = 3]
101:	proc  4 (engineThread:1) mainThreads.pml:152 (state 224)	[(1)]
102:	proc  3 (scriptWorkerThread:1) mainThreads.pml:593 (state 213)	[(1)]
103:	proc  4 (engineThread:1) mainThreads.pml:86 (state 227)	[assert(mutexInfo[1].forThread[_pid])]
104:	proc  4 (engineThread:1) mainThreads.pml:87 (state 228)	[((mThreadsMutex==1))]
104:	proc  4 (engineThread:1) mainThreads.pml:88 (state 229)	[mutexInfo[1].forThread[_pid] = 0]
104:	proc  4 (engineThread:1) mainThreads.pml:89 (state 230)	[mThreadsMutex = (mThreadsMutex-1)]
105:	proc  4 (engineThread:1) mainThreads.pml:155 (state 233)	[((tmp!=-(1)))]
106:	proc  4 (engineThread:1) mainThreads.pml:97 (state 238)	[assert((mThreadsMutex==0))]
106:	proc  4 (engineThread:1) mainThreads.pml:98 (state 239)	[assert(!(mutexInfo[1].forThread[_pid]))]
106:	proc  4 (engineThread:1) mainThreads.pml:99 (state 240)	[mutexInfo[1].forThread[_pid] = 1]
106:	proc  4 (engineThread:1) mainThreads.pml:100 (state 241)	[mThreadsMutex = (mThreadsMutex+1)]
107:	proc  4 (engineThread:1) mainThreads.pml:167 (state 261)	[(1)]
108:	proc  4 (engineThread:1) mainThreads.pml:508 (state 6)	[(!(abortEvaluationInvoked[id]))]
109:	proc  4 (engineThread:1) mainThreads.pml:142 (state 192)	[(1)]
110:	proc  4 (engineThread:1) mainThreads.pml:143 (state 193)	[(1)]
110:	proc  4 (engineThread:1) mainThreads.pml:145 (state 194)	[tmp = 0]
111:	proc  4 (engineThread:1) mainThreads.pml:112 (state 195)	[assert((-(1)<=(2-1)))]
111:	proc  4 (engineThread:1) mainThreads.pml:113 (state 196)	[tmp = -(1)]
112:	proc  4 (engineThread:1) mainThreads.pml:115 (state 197)	[((tmp<(2-1)))]
113:	proc  4 (engineThread:1) mainThreads.pml:118 (state 199)	[tmp = (tmp+1)]
114:	proc  4 (engineThread:1) mainThreads.pml:115 (state 197)	[((tmp<(2-1)))]
115:	proc  4 (engineThread:1) mainThreads.pml:118 (state 199)	[tmp = (tmp+1)]
116:	proc  4 (engineThread:1) mainThreads.pml:120 (state 202)	[((tmp==(2-1)))]
117:	proc  4 (engineThread:1) mainThreads.pml:114 (state 206)	[break]
118:	proc  4 (engineThread:1) mainThreads.pml:86 (state 209)	[assert(mutexInfo[1].forThread[_pid])]
119:	proc  4 (engineThread:1) mainThreads.pml:87 (state 210)	[((mThreadsMutex==1))]
119:	proc  4 (engineThread:1) mainThreads.pml:88 (state 211)	[mutexInfo[1].forThread[_pid] = 0]
119:	proc  4 (engineThread:1) mainThreads.pml:89 (state 212)	[mThreadsMutex = (mThreadsMutex-1)]
120:	proc  4 (engineThread:1) mainThreads.pml:155 (state 233)	[((tmp!=-(1)))]
121:	proc  4 (engineThread:1) mainThreads.pml:97 (state 238)	[assert((mThreadsMutex==0))]
121:	proc  4 (engineThread:1) mainThreads.pml:98 (state 239)	[assert(!(mutexInfo[1].forThread[_pid]))]
121:	proc  4 (engineThread:1) mainThreads.pml:99 (state 240)	[mutexInfo[1].forThread[_pid] = 1]
121:	proc  4 (engineThread:1) mainThreads.pml:100 (state 241)	[mThreadsMutex = (mThreadsMutex+1)]
122:	proc  4 (engineThread:1) mainThreads.pml:167 (state 261)	[(1)]
123:	proc  4 (engineThread:1) mainThreads.pml:508 (state 6)	[(!(abortEvaluationInvoked[id]))]
124:	proc  4 (engineThread:1) mainThreads.pml:253 (state 348)	[runningThread = 0]
125:	proc  4 (engineThread:1) mainThreads.pml:254 (state 349)	[((runningThread<2))]
126:	proc  4 (engineThread:1) mainThreads.pml:256 (state 350)	[(mThreads[runningThread])]
127:	proc  4 (engineThread:1) mainThreads.pml:80 (state 351)	[engineThreadEvents[runningThread]!2]
128:	proc  4 (engineThread:1) mainThreads.pml:260 (state 357)	[runningThread = (runningThread+1)]
129:	proc  4 (engineThread:1) mainThreads.pml:254 (state 349)	[((runningThread<2))]
130:	proc  4 (engineThread:1) mainThreads.pml:258 (state 353)	[else]
131:	proc  4 (engineThread:1) mainThreads.pml:258 (state 354)	[(1)]
131:	proc  4 (engineThread:1) mainThreads.pml:260 (state 357)	[runningThread = (runningThread+1)]
132:	proc  4 (engineThread:1) mainThreads.pml:261 (state 358)	[else]
133:	proc  4 (engineThread:1) mainThreads.pml:264 (state 363)	[mInEventDrivenMode = 1]
134:	proc  4 (engineThread:1) mainThreads.pml:328 (state 364)	[(1)]
135:	proc  4 (engineThread:1) mainThreads.pml:329 (state 365)	[(1)]
136:	proc  4 (engineThread:1) mainThreads.pml:333 (state 370)	[((mState==3))]
137:	proc  4 (engineThread:1) mainThreads.pml:333 (state 371)	[(1)]
                      ScriptEngineWorker: stopping script137:	proc  4 (engineThread:1) mainThreads.pml:338 (state 378)	[printf('ScriptEngineWorker: stopping script')]
                      
137:	proc  4 (engineThread:1) mainThreads.pml:338 (state 379)	[printf('\\n')]
138:	proc  4 (engineThread:1) mainThreads.pml:339 (state 380)	[mState = 2]
139:	proc  4 (engineThread:1) mainThreads.pml:244 (state 381)	[mInEventDrivenMode = 0]
140:	proc  4 (engineThread:1) mainThreads.pml:245 (state 382)	[loopStopWaiting = 1]
141:	proc  4 (engineThread:1) mainThreads.pml:270 (state 384)	[(1)]
142:	proc  4 (engineThread:1) mainThreads.pml:271 (state 385)	[(1)]
143:	proc  4 (engineThread:1) mainThreads.pml:86 (state 386)	[assert(mutexInfo[0].forThread[_pid])]
144:	proc  4 (engineThread:1) mainThreads.pml:87 (state 387)	[((mResetMutex==1))]
144:	proc  4 (engineThread:1) mainThreads.pml:88 (state 388)	[mutexInfo[0].forThread[_pid] = 0]
144:	proc  4 (engineThread:1) mainThreads.pml:89 (state 389)	[mResetMutex = (mResetMutex-1)]
145:	proc  4 (engineThread:1) mainThreads.pml:130 (state 399)	[else]
146:	proc  4 (engineThread:1) mainThreads.pml:130 (state 400)	[(1)]
147:	proc  4 (engineThread:1) mainThreads.pml:276 (state 406)	[else]
148:	proc  4 (engineThread:1) mainThreads.pml:276 (state 407)	[(1)]
149:	proc  4 (engineThread:1) mainThreads.pml:279 (state 411)	[mResetStarted = 1]
150:	proc  4 (engineThread:1) mainThreads.pml:97 (state 412)	[assert((mResetMutex==0))]
150:	proc  4 (engineThread:1) mainThreads.pml:98 (state 413)	[assert(!(mutexInfo[0].forThread[_pid]))]
150:	proc  4 (engineThread:1) mainThreads.pml:99 (state 414)	[mutexInfo[0].forThread[_pid] = 1]
150:	proc  4 (engineThread:1) mainThreads.pml:100 (state 415)	[mResetMutex = (mResetMutex+1)]
                      Threading: reset started150:	proc  4 (engineThread:1) mainThreads.pml:281 (state 418)	[printf('Threading: reset started')]
                      
150:	proc  4 (engineThread:1) mainThreads.pml:281 (state 419)	[printf('\\n')]
151:	proc  4 (engineThread:1) mainThreads.pml:86 (state 420)	[assert(mutexInfo[1].forThread[_pid])]
152:	proc  4 (engineThread:1) mainThreads.pml:87 (state 421)	[((mThreadsMutex==1))]
152:	proc  4 (engineThread:1) mainThreads.pml:88 (state 422)	[mutexInfo[1].forThread[_pid] = 0]
152:	proc  4 (engineThread:1) mainThreads.pml:89 (state 423)	[mThreadsMutex = (mThreadsMutex-1)]
152:	proc  4 (engineThread:1) mainThreads.pml:286 (state 426)	[k = 0]
153:	proc  4 (engineThread:1) mainThreads.pml:287 (state 427)	[((k<2))]
154:	proc  4 (engineThread:1) mainThreads.pml:289 (state 428)	[(mThreads[k])]
155:	proc  4 (engineThread:1) mainThreads.pml:244 (state 429)	[mInEventDrivenMode = 0]
156:	proc  4 (engineThread:1) mainThreads.pml:245 (state 430)	[loopStopWaiting = 1]
157:	proc  4 (engineThread:1) mainThreads.pml:136 (state 432)	[abortEvaluationInvoked[k] = 1]
158:	proc  4 (engineThread:1) mainThreads.pml:80 (state 433)	[engineThreadEvents[k]!2]
159:	proc  4 (engineThread:1) mainThreads.pml:294 (state 440)	[k = (k+1)]
160:	proc  4 (engineThread:1) mainThreads.pml:287 (state 427)	[((k<2))]
161:	proc  4 (engineThread:1) mainThreads.pml:292 (state 436)	[else]
162:	proc  4 (engineThread:1) mainThreads.pml:292 (state 437)	[(1)]
162:	proc  4 (engineThread:1) mainThreads.pml:294 (state 440)	[k = (k+1)]
163:	proc  4 (engineThread:1) mainThreads.pml:295 (state 441)	[else]
164:	proc  4 (engineThread:1) mainThreads.pml:217 (state 446)	[assert((2>0))]
164:	proc  4 (engineThread:1) mainThreads.pml:219 (state 447)	[i = 0]
165:	proc  4 (engineThread:1) mainThreads.pml:220 (state 448)	[((i<2))]
165:	proc  4 (engineThread:1) mainThreads.pml:220 (state 449)	[mFinishedThreads[i] = 0]
165:	proc  4 (engineThread:1) mainThreads.pml:220 (state 450)	[i = (i+1)]
166:	proc  4 (engineThread:1) mainThreads.pml:220 (state 448)	[((i<2))]
166:	proc  4 (engineThread:1) mainThreads.pml:220 (state 449)	[mFinishedThreads[i] = 0]
166:	proc  4 (engineThread:1) mainThreads.pml:220 (state 450)	[i = (i+1)]
167:	proc  4 (engineThread:1) mainThreads.pml:221 (state 451)	[((i==2))]
168:	proc  4 (engineThread:1) mainThreads.pml:219 (state 455)	[break]
169:	proc  4 (engineThread:1) mainThreads.pml:97 (state 458)	[assert((mThreadsMutex==0))]
169:	proc  4 (engineThread:1) mainThreads.pml:98 (state 459)	[assert(!(mutexInfo[1].forThread[_pid]))]
169:	proc  4 (engineThread:1) mainThreads.pml:99 (state 460)	[mutexInfo[1].forThread[_pid] = 1]
169:	proc  4 (engineThread:1) mainThreads.pml:100 (state 461)	[mThreadsMutex = (mThreadsMutex+1)]
170:	proc  4 (engineThread:1) mainThreads.pml:244 (state 464)	[mInEventDrivenMode = 0]
171:	proc  4 (engineThread:1) mainThreads.pml:245 (state 465)	[loopStopWaiting = 1]
spin: trail ends after 171 steps
#processes: 5
		mState = 2
		mInEventDrivenMode = 0
		mResetMutex = 1
		mResetStarted = 1
		mThreadsMutex = 1
		mFinishedThreads[0] = 0
		mFinishedThreads[1] = 0
		mPreventFromStart[0] = 0
		mPreventFromStart[1] = 0
		mThreads[0] = 1
		mThreads[1] = 0
		threadId = 1
		queue 1 (GUIThreadEvents): 
		queue 2 (scriptWorkerThreadEvents): 
		queue 5 (engineThreadEvents[0]): [stopRunning][stopRunning]
		queue 6 (engineThreadEvents[1]): 
		abortEvaluationInvoked[0] = 1
		abortEvaluationInvoked[1] = 0
		mThreadCount = 1
		timerTimeout = 0
		loopStopWaiting = 1
		mErrorMessage = 0
		isAutonomousCycle[0] = 0
		isAutonomousCycle[1] = 0
		mutexInfo[0].forThread[0] = 1
		mutexInfo[0].forThread[1] = 1
		mutexInfo[0].forThread[2] = 1
		mutexInfo[0].forThread[3] = 1
		mutexInfo[0].forThread[4] = 1
		mutexInfo[0].forThread[5] = 1
		mutexInfo[0].forThread[6] = 1
		mutexInfo[0].forThread[7] = 1
		mutexInfo[0].forThread[8] = 1
		mutexInfo[1].forThread[0] = 1
		mutexInfo[1].forThread[1] = 1
		mutexInfo[1].forThread[2] = 1
		mutexInfo[1].forThread[3] = 1
		mutexInfo[1].forThread[4] = 1
		mutexInfo[1].forThread[5] = 1
		mutexInfo[1].forThread[6] = 1
		mutexInfo[1].forThread[7] = 1
		mutexInfo[1].forThread[8] = 1
171:	proc  4 (engineThread:1) mainThreads.pml:302 (state 467)
171:	proc  3 (scriptWorkerThread:1) mainThreads.pml:594 (state 214) <valid end state>
171:	proc  2 (GUIThread:1) mainThreads.pml:614 (state 296) <valid end state>
171:	proc  1 (ExceptionHandler:1) mainThreads.pml:677 (state 5) <valid end state>
171:	proc  0 (:init::1) mainThreads.pml:697 (state 4) <valid end state>
6 processes created

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------- Итог: контрпример, выданный верификатором может проявиться в реальной системе ---------------------------------------------------------
--------------------------- после вызова script.quit(); в некотором потоке. В системе появятся два бесконечный цикла в разных потоках, ----------------------------
--------------------------- каждый из которых будет ждать "полезных действий" от другого. И это "зависание" невозможно будет убрать выходом из программы, ---------
--------------------------- так как контроль на обработку очереди событий не вернется. ----------------------------------------------------------------------------
--------------------------- Пример, в котором может произойти данное вычисление, приведен в 1.js. -----------------------------------------------------------------
--------------------------- (возможно, придется много раз запускать программу :) ) --------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------