----------------------------------- Поздний коннект --------------------------------------------------
------------------------------------------------------------------------------------------------------
using statement merging
Starting ExceptionHandler with pid 1
  1:	proc  0 (:init::1) mainThreads.pml:634 (state 1)	[(run ExceptionHandler())]
Starting GUIThread with pid 2
  2:	proc  0 (:init::1) mainThreads.pml:635 (state 2)	[(run GUIThread())]
  3:	proc  0 (:init::1) mainThreads.pml:55 (state 3)	[GUIThreadEvents!4]
  4:	proc  2 (GUIThread:1) mainThreads.pml:556 (state 1)	[GUIThreadEvents?signal]
  5:	proc  2 (GUIThread:1) mainThreads.pml:558 (state 2)	[((signal==runScript))]
              TrikGui started  5:	proc  2 (GUIThread:1) mainThreads.pml:559 (state 3)	[printf('TrikGui started')]
              
  5:	proc  2 (GUIThread:1) mainThreads.pml:559 (state 4)	[printf('\\n')]
Starting connectionThread with pid 3
  6:	proc  2 (GUIThread:1) mainThreads.pml:560 (state 5)	[(run connectionThread())]
Starting sensorsThread with pid 4
  7:	proc  2 (GUIThread:1) mainThreads.pml:561 (state 6)	[(run sensorsThread())]
              Starting TrikScriptRunner worker thread  8:	proc  2 (GUIThread:1) mainThreads.pml:564 (state 7)	[printf('Starting TrikScriptRunner worker thread')]
              
  8:	proc  2 (GUIThread:1) mainThreads.pml:564 (state 8)	[printf('\\n')]
Starting scriptWorkerThread with pid 5
  9:	proc  2 (GUIThread:1) mainThreads.pml:565 (state 9)	[(run scriptWorkerThread())]
              TrikScriptRunner: new script 10:	proc  2 (GUIThread:1) mainThreads.pml:567 (state 10)	[printf('TrikScriptRunner: new script')]
              
 10:	proc  2 (GUIThread:1) mainThreads.pml:567 (state 11)	[printf('\\n')]
 11:	proc  2 (GUIThread:1) mainThreads.pml:285 (state 12)	[(1)]
 12:	proc  2 (GUIThread:1) mainThreads.pml:286 (state 13)	[(1)]
 13:	proc  2 (GUIThread:1) mainThreads.pml:289 (state 16)	[((mState==0))]
 14:	proc  2 (GUIThread:1) mainThreads.pml:304 (state 113)	[(1)]
              ScriptEngineWorker: starting script 14:	proc  2 (GUIThread:1) mainThreads.pml:571 (state 115)	[printf('ScriptEngineWorker: starting script')]
              
 14:	proc  2 (GUIThread:1) mainThreads.pml:571 (state 116)	[printf('\\n')]
 15:	proc  2 (GUIThread:1) mainThreads.pml:572 (state 117)	[mState = 1]
 16:	proc  2 (GUIThread:1) mainThreads.pml:575 (state 118)	[threadId = 0]
 17:	proc  2 (GUIThread:1) mainThreads.pml:177 (state 119)	[assert((3>0))]
 17:	proc  2 (GUIThread:1) mainThreads.pml:179 (state 120)	[i = 0]
 18:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 121)	[((i<3))]
 18:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 122)	[abortEvaluationInvoked[i] = 0]
 18:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 123)	[i = (i+1)]
 19:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 121)	[((i<3))]
 19:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 122)	[abortEvaluationInvoked[i] = 0]
 19:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 123)	[i = (i+1)]
 20:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 121)	[((i<3))]
 20:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 122)	[abortEvaluationInvoked[i] = 0]
 20:	proc  2 (GUIThread:1) mainThreads.pml:180 (state 123)	[i = (i+1)]
 21:	proc  2 (GUIThread:1) mainThreads.pml:181 (state 124)	[((i==3))]
 22:	proc  2 (GUIThread:1) mainThreads.pml:55 (state 131)	[scriptWorkerThreadEvents!7]
 23:	proc  5 (scriptWorkerThread:1) mainThreads.pml:534 (state 1)	[scriptWorkerThreadEvents?signal]
 24:	proc  5 (scriptWorkerThread:1) mainThreads.pml:536 (state 2)	[((signal==INVOKEdoRun))]
	// необходимые обнуления некоторых списков и строк
 38:	proc  5 (scriptWorkerThread:1) mainThreads.pml:76 (state 28)	[catch!10]
 39:	proc  1 (ExceptionHandler:1) mainThreads.pml:619 (state 1)	[catch?FailedToOpenFileException]
 40:	proc  1 (ExceptionHandler:1) mainThreads.pml:621 (state 2)	[catch!returnControl]
 41:	proc  5 (scriptWorkerThread:1) mainThreads.pml:382 (state 30)	[catch?returnControl]
 42:	proc  5 (scriptWorkerThread:1) mainThreads.pml:386 (state 34)	[(1)]
 43:	proc  5 (scriptWorkerThread:1) mainThreads.pml:319 (state 44)	[(1)]
 44:	proc  5 (scriptWorkerThread:1) mainThreads.pml:320 (state 45)	[(1)]
 44:	proc  5 (scriptWorkerThread:1) mainThreads.pml:322 (state 46)	[tmp = 0]
 45:	proc  5 (scriptWorkerThread:1) mainThreads.pml:82 (state 47)	[assert((-(1)<=(3-1)))]
 45:	proc  5 (scriptWorkerThread:1) mainThreads.pml:83 (state 48)	[tmp = -(1)]
 46:	proc  5 (scriptWorkerThread:1) mainThreads.pml:85 (state 49)	[((tmp<(3-1)))]
 47:	proc  5 (scriptWorkerThread:1) mainThreads.pml:87 (state 50)	[goto :b18]
 48:	proc  5 (scriptWorkerThread:1) mainThreads.pml:84 (state 59)	[break]
 49:	proc  5 (scriptWorkerThread:1) mainThreads.pml:61 (state 62)	[((mResetMutex==1))]
 49:	proc  5 (scriptWorkerThread:1) mainThreads.pml:62 (state 63)	[mResetMutex = (mResetMutex-1)]
 50:	proc  5 (scriptWorkerThread:1) mainThreads.pml:330 (state 75)	[else]
 51:	proc  5 (scriptWorkerThread:1) mainThreads.pml:330 (state 76)	[(1)]
 52:	proc  5 (scriptWorkerThread:1) mainThreads.pml:61 (state 79)	[((mThreadsMutex==1))]
 52:	proc  5 (scriptWorkerThread:1) mainThreads.pml:62 (state 80)	[mThreadsMutex = (mThreadsMutex-1)]
 53:	proc  5 (scriptWorkerThread:1) mainThreads.pml:341 (state 100)	[else]
 54:	proc  5 (scriptWorkerThread:1) mainThreads.pml:341 (state 101)	[(1)]
 55:	proc  5 (scriptWorkerThread:1) mainThreads.pml:351 (state 118)	[else]
 56:	proc  5 (scriptWorkerThread:1) mainThreads.pml:351 (state 119)	[(1)]
                          Starting new thread ... with engine ... 56:	proc  5 (scriptWorkerThread:1) mainThreads.pml:353 (state 122)	[printf('Starting new thread ... with engine ...')]
                          
 56:	proc  5 (scriptWorkerThread:1) mainThreads.pml:353 (state 123)	[printf('\\n')]
 56:	proc  5 (scriptWorkerThread:1) mainThreads.pml:355 (state 124)	[myThread = 0]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:356 (state 125)	[((threadId!=-(1)))]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:357 (state 126)	[myThread = threadId]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:358 (state 127)	[mThreads[myThread] = 1]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:359 (state 128)	[abortEvaluationInvoked[myThread] = 0]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:360 (state 129)	[mThreadCount = (mThreadCount+1)]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:361 (state 130)	[assert((mThreadCount<=3))]
 57:	proc  5 (scriptWorkerThread:1) mainThreads.pml:362 (state 131)	[assert((mThreadCount>=1))]
 58:	proc  5 (scriptWorkerThread:1) mainThreads.pml:310 (state 132)	[i = 0]
 59:	proc  5 (scriptWorkerThread:1) mainThreads.pml:311 (state 133)	[(((i<3)&&mThreads[i]))]
 59:	proc  5 (scriptWorkerThread:1) mainThreads.pml:311 (state 134)	[i = (i+1)]
 60:	proc  5 (scriptWorkerThread:1) mainThreads.pml:312 (state 135)	[(((i<3)&&!(mThreads[i])))]
 60:	proc  5 (scriptWorkerThread:1) mainThreads.pml:312 (state 136)	[threadId = i]
 61:	proc  5 (scriptWorkerThread:1) mainThreads.pml:310 (state 143)	[break]
 62:	proc  5 (scriptWorkerThread:1) mainThreads.pml:365 (state 146)	[mFinishedThreads[myThread] = 0]
 63:	proc  5 (scriptWorkerThread:1) mainThreads.pml:69 (state 147)	[assert((mThreadsMutex==0))]
 63:	proc  5 (scriptWorkerThread:1) mainThreads.pml:70 (state 148)	[mThreadsMutex = (mThreadsMutex+1)]
Starting engineThread with pid 6
 64:	proc  5 (scriptWorkerThread:1) mainThreads.pml:367 (state 151)	[(run engineThread(myThread))]
 65:	proc  5 (scriptWorkerThread:1) mainThreads.pml:55 (state 152)	[engineThreadEvents[myThread]!5]
                          Threading: started thread ... with engine ... thread object ... 66:	proc  5 (scriptWorkerThread:1) mainThreads.pml:371 (state 154)	[printf('Threading: started thread ... with engine ... thread object ...')]
                          
 66:	proc  5 (scriptWorkerThread:1) mainThreads.pml:371 (state 155)	[printf('\\n')]
 67:	proc  6 (engineThread:1) mainThreads.pml:454 (state 1)	[engineThreadEvents[id]?signal]
 68:	proc  6 (engineThread:1) mainThreads.pml:456 (state 2)	[((signal==start))]
                              Started thread ScriptThread 68:	proc  6 (engineThread:1) mainThreads.pml:457 (state 3)	[printf('Started thread ScriptThread')]
                              
 68:	proc  6 (engineThread:1) mainThreads.pml:457 (state 4)	[printf('\\n')]
 69:	proc  6 (engineThread:1) mainThreads.pml:458 (state 5)	[(1)]
 70:	proc  6 (engineThread:1) mainThreads.pml:459 (state 6)	[assert(!(abortEvaluationInvoked[id]))]
 71:	proc  6 (engineThread:1) mainThreads.pml:462 (state 7)	[(!(abortEvaluationInvoked[id]))]
 72:	proc  6 (engineThread:1) mainThreads.pml:188 (state 279)	[mInEventDrivenMode = 1] 			//// вызываем функцию script.run();
 73:	proc  6 (engineThread:1) mainThreads.pml:462 (state 7)	[(!(abortEvaluationInvoked[id]))]
 74:	proc  6 (engineThread:1) mainThreads.pml:76 (state 8)	[catch!10]								//// вызываем функцию Threading.startThread(...)
 75:	proc  1 (ExceptionHandler:1) mainThreads.pml:619 (state 1)	[catch?FailedToOpenFileException]
 76:	proc  5 (scriptWorkerThread:1) mainThreads.pml:69 (state 156)	[assert((mResetMutex==0))]
 76:	proc  5 (scriptWorkerThread:1) mainThreads.pml:70 (state 157)	[mResetMutex = (mResetMutex+1)]
 77:	proc  5 (scriptWorkerThread:1) mainThreads.pml:373 (state 160)	[(1)]
 78:	proc  1 (ExceptionHandler:1) mainThreads.pml:621 (state 2)	[catch!returnControl]
 79:	proc  6 (engineThread:1) mainThreads.pml:382 (state 10)	[catch?returnControl]
 80:	proc  6 (engineThread:1) mainThreads.pml:386 (state 14)	[(1)]
 81:	proc  6 (engineThread:1) mainThreads.pml:466 (state 24)	[(1)]
 82:	proc  6 (engineThread:1) mainThreads.pml:76 (state 25)	[catch!10]
 83:	proc  1 (ExceptionHandler:1) mainThreads.pml:619 (state 1)	[catch?FailedToOpenFileException]
 84:	proc  1 (ExceptionHandler:1) mainThreads.pml:621 (state 2)	[catch!returnControl]
 85:	proc  6 (engineThread:1) mainThreads.pml:382 (state 27)	[catch?returnControl]
 86:	proc  6 (engineThread:1) mainThreads.pml:386 (state 31)	[(1)]
 87:	proc  6 (engineThread:1) mainThreads.pml:319 (state 41)	[(1)]
 88:	proc  6 (engineThread:1) mainThreads.pml:320 (state 42)	[(1)]
 88:	proc  6 (engineThread:1) mainThreads.pml:322 (state 43)	[tmp = 0]
 89:	proc  6 (engineThread:1) mainThreads.pml:82 (state 44)	[assert((-(1)<=(3-1)))]
 89:	proc  6 (engineThread:1) mainThreads.pml:83 (state 45)	[tmp = -(1)]
 90:	proc  6 (engineThread:1) mainThreads.pml:85 (state 46)	[((tmp<(3-1)))]
 91:	proc  6 (engineThread:1) mainThreads.pml:88 (state 48)	[(1)]
 91:	proc  6 (engineThread:1) mainThreads.pml:90 (state 51)	[tmp = (tmp+1)]
 92:	proc  6 (engineThread:1) mainThreads.pml:85 (state 46)	[((tmp<(3-1)))]
 93:	proc  6 (engineThread:1) mainThreads.pml:87 (state 47)	[goto :b4]
 94:	proc  6 (engineThread:1) mainThreads.pml:84 (state 56)	[break]
 95:	proc  6 (engineThread:1) mainThreads.pml:61 (state 59)	[((mResetMutex==1))]
 95:	proc  6 (engineThread:1) mainThreads.pml:62 (state 60)	[mResetMutex = (mResetMutex-1)]
 96:	proc  6 (engineThread:1) mainThreads.pml:330 (state 72)	[else]
 97:	proc  6 (engineThread:1) mainThreads.pml:330 (state 73)	[(1)]
 98:	proc  6 (engineThread:1) mainThreads.pml:61 (state 76)	[((mThreadsMutex==1))]
 98:	proc  6 (engineThread:1) mainThreads.pml:62 (state 77)	[mThreadsMutex = (mThreadsMutex-1)]
 99:	proc  6 (engineThread:1) mainThreads.pml:334 (state 80)	[(((tmp!=-(1))&&mThreads[tmp]))]
                              ERROR: Threading: attempt to create a thread with an already occupied id100:	proc  6 (engineThread:1) mainThreads.pml:335 (state 81)	[printf('ERROR: Threading: attempt to create a thread with an already occupied id')]
                              
100:	proc  6 (engineThread:1) mainThreads.pml:335 (state 82)	[printf('\\n')]
101:	proc  6 (engineThread:1) mainThreads.pml:336 (state 83)	[mErrorMessage = 1]
102:	proc  6 (engineThread:1) mainThreads.pml:107 (state 84)	[abortEvaluationInvoked[tmp] = 1]
103:	proc  6 (engineThread:1) mainThreads.pml:55 (state 85)	[engineThreadEvents[tmp]!2]
104:	proc  6 (engineThread:1) mainThreads.pml:69 (state 88)	[assert((mThreadsMutex==0))]
104:	proc  6 (engineThread:1) mainThreads.pml:70 (state 89)	[mThreadsMutex = (mThreadsMutex+1)]
105:	proc  6 (engineThread:1) mainThreads.pml:69 (state 92)	[assert((mResetMutex==0))]
105:	proc  6 (engineThread:1) mainThreads.pml:70 (state 93)	[mResetMutex = (mResetMutex+1)]
106:	proc  6 (engineThread:1) mainThreads.pml:373 (state 157)	[(1)]
107:	proc  6 (engineThread:1) mainThreads.pml:479 (state 288)	[else] 			//// конец исполняемого скрипта
108:	proc  6 (engineThread:1) mainThreads.pml:481 (state 293)	[(1)]
109:	proc  6 (engineThread:1) mainThreads.pml:486 (state 296)	[(mInEventDrivenMode)]
110:	proc  6 (engineThread:1) mainThreads.pml:409 (state 297)	[temp = 0]
111:	proc  6 (engineThread:1) mainThreads.pml:411 (state 300)	[(nempty(engineThreadEvents[id]))]
112:	proc  6 (engineThread:1) mainThreads.pml:412 (state 301)	[engineThreadEvents[id]?temp]
113:	proc  6 (engineThread:1) mainThreads.pml:414 (state 302)	[((temp==2))]
spin: mainThreads.pml:414, Error: assertion violated
spin: text of failed assertion: assert(0)
113:	proc  6 (engineThread:1) mainThreads.pml:414 (state 303)	[assert(0)] //// этот ассерт означает, что был испущен сигнал до коннекта.
																				//// в реальной системе происходит нежелательное поведение программы.
																				//// в качестве решения (возможно) стоит переместить QEventLoop loop; connect(this, SIGNAL(stopRunning()), &loop, SLOT(quit()), Qt::QueuedConnection);
																				//// в начало функции run()
spin: trail ends after 113 steps
#processes: 7
		mState = 1
		mInEventDrivenMode = 1
		mResetMutex = 1
		mResetStarted = 0
		mThreadsMutex = 1
		mFinishedThreads[0] = 0
		mFinishedThreads[1] = 0
		mFinishedThreads[2] = 0
		mPreventFromStart[0] = 0
		mPreventFromStart[1] = 0
		mPreventFromStart[2] = 0
		mThreads[0] = 1
		mThreads[1] = 0
		mThreads[2] = 0
		threadId = 1
		queue 1 (GUIThreadEvents): 
		queue 2 (scriptWorkerThreadEvents): 
		queue 5 (engineThreadEvents[0]): 
		queue 6 (engineThreadEvents[1]): 
		queue 7 (engineThreadEvents[2]): 
		abortEvaluationInvoked[0] = 1
		abortEvaluationInvoked[1] = 0
		abortEvaluationInvoked[2] = 0
		mThreadCount = 1
		timerTimeout = 0
		loopStopWaiting = 0
		mErrorMessage = 1
113:	proc  6 (engineThread:1) mainThreads.pml:409 (state 308)
113:	proc  5 (scriptWorkerThread:1) mainThreads.pml:542 (state 162)
113:	proc  4 (sensorsThread:1) mainThreads.pml:430 (state 6) <valid end state>
113:	proc  3 (connectionThread:1) mainThreads.pml:441 (state 6) <valid end state>
113:	proc  2 (GUIThread:1) mainThreads.pml:555 (state 274) <valid end state>
113:	proc  1 (ExceptionHandler:1) mainThreads.pml:616 (state 5) <valid end state>
113:	proc  0 (:init::1) mainThreads.pml:637 (state 5) <valid end state>
7 processes created

---------------------------------------------------------------------------------------------------------------------------
--------- Итог: верификатор нашел вычисление, при котором испускается сигнал до необходмого коннекта ----------------------
--------- Таким образом, появляется нежелательное поведение в модели/системе ----------------------------------------------
--------- Проверка показала, что в реальной системе подобное вычисление возможно, т.е. модель адекватна. ------------------
---------------------------------------------------------------------------------------------------------------------------
--------- В качестве примеров скриптов, когда возможно такое поведение, можно привести пример 1.js и 2.js -----------------
--------- (1.js - это примерно тот скрипт, на котором верификатор выдал контрпример, описанный выше) ----------------------
---------------------------------------------------------------------------------------------------------------------------