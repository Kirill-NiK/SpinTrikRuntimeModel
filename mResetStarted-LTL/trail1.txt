-----------------------------------------------------------------------------------------------
---------------------  /* !([](p1 -> ((<>p2) && (p3 U p2)))) */ -------------------------------
--------------------- #define p1 GUIThread@mResetStarted_enter --------------------------------
--------------------- #define p2 GUIThread@mResetStarted_exit ---------------------------------
--------------------- #define p3 mResetStarted ------------------------------------------------
-----------------------------------------------------------------------------------------------
--------------------- (дополнительный пример (почти тот же trail.txt)) ------------------------
--------------------- (только для немного другой модели (что удобства чтения) -----------------
-----------------------------------------------------------------------------------------------

using statement merging
Never claim moves to line 722	[(1)]
Starting ExceptionHandler with pid 2
  2:	proc  0 (:init::1) mainThreads.pml:710 (state 1)	[(run ExceptionHandler())]
Starting GUIThread with pid 3
  4:	proc  0 (:init::1) mainThreads.pml:711 (state 2)	[(run GUIThread())]
                  TrikGui started  6:	proc  2 (GUIThread:1) mainThreads.pml:622 (state 1)	[printf('TrikGui started')]
                  
  6:	proc  2 (GUIThread:1) mainThreads.pml:622 (state 2)	[printf('\\n')]
  8:	proc  2 (GUIThread:1) mainThreads.pml:623 (state 3)	[mInEventDrivenMode = 0]
 10:	proc  2 (GUIThread:1) mainThreads.pml:624 (state 4)	[RunningWidget = 0]
                  Starting TrikScriptRunner worker thread 12:	proc  2 (GUIThread:1) mainThreads.pml:630 (state 5)	[printf('Starting TrikScriptRunner worker thread')]
                  
 12:	proc  2 (GUIThread:1) mainThreads.pml:630 (state 6)	[printf('\\n')]
Starting User with pid 4
 14:	proc  0 (:init::1) mainThreads.pml:712 (state 3)	[(run User())]
                      emit 16:	proc  3 (User:1) mainThreads.pml:81 (state 1)	[printf('emit')]
 18:	proc  3 (User:1) mainThreads.pml:82 (state 2) <valid end state>	[GUIThreadEvents!5]
                      emit 20:	proc  3 (User:1) mainThreads.pml:81 (state 9)	[printf('emit')]
 22:	proc  3 (User:1) mainThreads.pml:82 (state 10) <valid end state>	[GUIThreadEvents!5]
Starting scriptWorkerThread with pid 5
 24:	proc  2 (GUIThread:1) mainThreads.pml:632 (state 7)	[(run scriptWorkerThread())]
 25:	proc  2 (GUIThread:1) mainThreads.pml:633 (state 8)	[mResetStarted = 0]
 25:	proc  2 (GUIThread:1) mainThreads.pml:634 (state 9)	[mState = 0]
 27:	proc  2 (GUIThread:1) mainThreads.pml:637 (state 11)	[GUIThreadEvents?signal]
 29:	proc  2 (GUIThread:1) mainThreads.pml:639 (state 12)	[((signal==runScript))]
                  TrikScriptRunner: new script 29:	proc  2 (GUIThread:1) mainThreads.pml:641 (state 13)	[printf('TrikScriptRunner: new script')]
                  
 29:	proc  2 (GUIThread:1) mainThreads.pml:641 (state 14)	[printf('\\n')]
                  stopScript_call
 31:	proc  2 (GUIThread:1) mainThreads.pml:340 (state 15)	[printf('stopScript_call\\n')]
 33:	proc  2 (GUIThread:1) mainThreads.pml:341 (state 16)	[(1)]
 35:	proc  2 (GUIThread:1) mainThreads.pml:344 (state 19)	[((mState==0))]
 37:	proc  2 (GUIThread:1) mainThreads.pml:359 (state 138)	[(1)]
                  stopScript_return
 37:	proc  2 (GUIThread:1) mainThreads.pml:360 (state 139)	[printf('stopScript_return\\n')]
                  ScriptEngineWorker: starting script 37:	proc  2 (GUIThread:1) mainThreads.pml:645 (state 141)	[printf('ScriptEngineWorker: starting script')]
                  
 37:	proc  2 (GUIThread:1) mainThreads.pml:645 (state 142)	[printf('\\n')]
 39:	proc  2 (GUIThread:1) mainThreads.pml:646 (state 143)	[mState = 1]
 41:	proc  2 (GUIThread:1) mainThreads.pml:649 (state 144)	[RunningWidget = 1]
 42:	proc  2 (GUIThread:1) mainThreads.pml:650 (state 145)	[(1)]
 44:	proc  2 (GUIThread:1) mainThreads.pml:653 (state 147)	[threadId = 0]
 45:	proc  2 (GUIThread:1) mainThreads.pml:212 (state 148)	[assert((2>0))]
 45:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 149)	[i = 0]
 46:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 150)	[((i<2))]
 46:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 151)	[abortEvaluationInvoked[i] = 0]
 46:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 152)	[i = (i+1)]
 47:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 150)	[((i<2))]
 47:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 151)	[abortEvaluationInvoked[i] = 0]
 47:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 152)	[i = (i+1)]
 48:	proc  2 (GUIThread:1) mainThreads.pml:216 (state 153)	[((i==2))]
                  cleared
 48:	proc  2 (GUIThread:1) mainThreads.pml:218 (state 158)	[printf('cleared\\n')]
                  emit 49:	proc  2 (GUIThread:1) mainThreads.pml:81 (state 161)	[printf('emit')]
 50:	proc  2 (GUIThread:1) mainThreads.pml:82 (state 162) <valid end state>	[scriptWorkerThreadEvents!8]
 52:	proc  4 (scriptWorkerThread:1) mainThreads.pml:592 (state 1)	[scriptWorkerThreadEvents?signal]
 54:	proc  4 (scriptWorkerThread:1) mainThreads.pml:594 (state 2)	[((signal==INVOKEdoRun))]
 56:	proc  4 (scriptWorkerThread:1) mainThreads.pml:596 (state 3)	[mErrorMessage = 0]
 58:	proc  4 (scriptWorkerThread:1) mainThreads.pml:212 (state 4)	[assert((2>0))]
 58:	proc  4 (scriptWorkerThread:1) mainThreads.pml:214 (state 5)	[i = 0]
 59:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 6)	[((i<2))]
 59:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 7)	[mFinishedThreads[i] = 0]
 59:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 8)	[i = (i+1)]
 60:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 6)	[((i<2))]
 60:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 7)	[mFinishedThreads[i] = 0]
 60:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 8)	[i = (i+1)]
 61:	proc  4 (scriptWorkerThread:1) mainThreads.pml:216 (state 9)	[((i==2))]
 62:	proc  4 (scriptWorkerThread:1) mainThreads.pml:214 (state 13)	[break]
                          cleared
 63:	proc  4 (scriptWorkerThread:1) mainThreads.pml:218 (state 14)	[printf('cleared\\n')]
 65:	proc  4 (scriptWorkerThread:1) mainThreads.pml:212 (state 17)	[assert((2>0))]
 65:	proc  4 (scriptWorkerThread:1) mainThreads.pml:214 (state 18)	[i = 0]
 66:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 19)	[((i<2))]
 66:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 20)	[mPreventFromStart[i] = 0]
 66:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 21)	[i = (i+1)]
 67:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 19)	[((i<2))]
 67:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 20)	[mPreventFromStart[i] = 0]
 67:	proc  4 (scriptWorkerThread:1) mainThreads.pml:215 (state 21)	[i = (i+1)]
 68:	proc  4 (scriptWorkerThread:1) mainThreads.pml:216 (state 22)	[((i==2))]
 69:	proc  4 (scriptWorkerThread:1) mainThreads.pml:214 (state 26)	[break]
                          cleared
 70:	proc  4 (scriptWorkerThread:1) mainThreads.pml:218 (state 27)	[printf('cleared\\n')]
 72:	proc  4 (scriptWorkerThread:1) mainThreads.pml:599 (state 30)	[timerTimeout = 0]
 74:	proc  4 (scriptWorkerThread:1) mainThreads.pml:600 (state 31)	[loopStopWaiting = 0]
                          evalSystemJs_call
 76:	proc  4 (scriptWorkerThread:1) mainThreads.pml:441 (state 32)	[printf('evalSystemJs_call\\n')]
 78:	proc  4 (scriptWorkerThread:1) mainThreads.pml:110 (state 33)	[catch!11]
 79:	proc  1 (ExceptionHandler:1) mainThreads.pml:696 (state 1)	[catch?FailedToOpenFileException]
 81:	proc  2 (GUIThread:1) mainThreads.pml:637 (state 11)	[GUIThreadEvents?signal]
 83:	proc  2 (GUIThread:1) mainThreads.pml:639 (state 12)	[((signal==runScript))]
                  TrikScriptRunner: new script 83:	proc  2 (GUIThread:1) mainThreads.pml:641 (state 13)	[printf('TrikScriptRunner: new script')]
                  
 83:	proc  2 (GUIThread:1) mainThreads.pml:641 (state 14)	[printf('\\n')]
                  stopScript_call
 85:	proc  2 (GUIThread:1) mainThreads.pml:340 (state 15)	[printf('stopScript_call\\n')]
 87:	proc  2 (GUIThread:1) mainThreads.pml:341 (state 16)	[(1)]
 89:	proc  2 (GUIThread:1) mainThreads.pml:346 (state 23)	[((mState==1))]
 91:	proc  1 (ExceptionHandler:1) mainThreads.pml:698 (state 2)	[catch!returnControl]
 92:	proc  4 (scriptWorkerThread:1) mainThreads.pml:446 (state 35)	[catch?returnControl]
 94:	proc  4 (scriptWorkerThread:1) mainThreads.pml:450 (state 39)	[(1)]
                          evalSystemJs_return
 94:	proc  4 (scriptWorkerThread:1) mainThreads.pml:456 (state 48)	[printf('evalSystemJs_return\\n')]
                          startThread_call
 96:	proc  4 (scriptWorkerThread:1) mainThreads.pml:375 (state 50)	[printf('startThread_call\\n')]
 98:	proc  4 (scriptWorkerThread:1) mainThreads.pml:376 (state 51)	[(1)]
 98:	proc  4 (scriptWorkerThread:1) mainThreads.pml:378 (state 52)	[tmp = 0]
100:	proc  4 (scriptWorkerThread:1) mainThreads.pml:116 (state 53)	[assert((-(1)<=(2-1)))]
100:	proc  4 (scriptWorkerThread:1) mainThreads.pml:117 (state 54)	[tmp = -(1)]
101:	proc  4 (scriptWorkerThread:1) mainThreads.pml:119 (state 55)	[((tmp<(2-1)))]
102:	proc  4 (scriptWorkerThread:1) mainThreads.pml:121 (state 56)	[goto :b14]
103:	proc  4 (scriptWorkerThread:1) mainThreads.pml:118 (state 64)	[break]
                          random_return
104:	proc  4 (scriptWorkerThread:1) mainThreads.pml:126 (state 65)	[printf('random_return\\n')]
106:	proc  4 (scriptWorkerThread:1) mainThreads.pml:88 (state 68)	[assert(mutexInfo[0].forThread[_pid])]
107:	proc  4 (scriptWorkerThread:1) mainThreads.pml:89 (state 69)	[((mResetMutex==1))]
107:	proc  4 (scriptWorkerThread:1) mainThreads.pml:90 (state 70)	[mutexInfo[0].forThread[_pid] = 0]
107:	proc  4 (scriptWorkerThread:1) mainThreads.pml:91 (state 71)	[mResetMutex = (mResetMutex-1)]
                          locked
107:	proc  4 (scriptWorkerThread:1) mainThreads.pml:92 (state 72)	[printf('locked\\n')]
109:	proc  4 (scriptWorkerThread:1) mainThreads.pml:386 (state 87)	[else]
111:	proc  4 (scriptWorkerThread:1) mainThreads.pml:386 (state 88)	[(1)]
113:	proc  4 (scriptWorkerThread:1) mainThreads.pml:88 (state 91)	[assert(mutexInfo[1].forThread[_pid])]
114:	proc  4 (scriptWorkerThread:1) mainThreads.pml:89 (state 92)	[((mThreadsMutex==1))]
114:	proc  4 (scriptWorkerThread:1) mainThreads.pml:90 (state 93)	[mutexInfo[1].forThread[_pid] = 0]
114:	proc  4 (scriptWorkerThread:1) mainThreads.pml:91 (state 94)	[mThreadsMutex = (mThreadsMutex-1)]
                          locked
114:	proc  4 (scriptWorkerThread:1) mainThreads.pml:92 (state 95)	[printf('locked\\n')]
116:	proc  4 (scriptWorkerThread:1) mainThreads.pml:397 (state 122)	[else]
118:	proc  4 (scriptWorkerThread:1) mainThreads.pml:397 (state 123)	[(1)]
120:	proc  4 (scriptWorkerThread:1) mainThreads.pml:407 (state 146)	[else]
122:	proc  4 (scriptWorkerThread:1) mainThreads.pml:407 (state 147)	[(1)]
                          Starting new thread ... with engine ...122:	proc  4 (scriptWorkerThread:1) mainThreads.pml:409 (state 150)	[printf('Starting new thread ... with engine ...')]
                          
122:	proc  4 (scriptWorkerThread:1) mainThreads.pml:409 (state 151)	[printf('\\n')]
122:	proc  4 (scriptWorkerThread:1) mainThreads.pml:411 (state 152)	[myThread = 0]
124:	proc  4 (scriptWorkerThread:1) mainThreads.pml:415 (state 169)	[(((threadId!=-(1))&&(_nr_pr<7)))]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:415 (state 170)	[(1)]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:418 (state 173)	[myThread = threadId]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:419 (state 174)	[mThreads[myThread] = 1]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:420 (state 175)	[abortEvaluationInvoked[myThread] = 0]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:421 (state 176)	[mThreadCount = (mThreadCount+1)]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:422 (state 177)	[assert((mThreadCount<=2))]
125:	proc  4 (scriptWorkerThread:1) mainThreads.pml:423 (state 178)	[assert((mThreadCount>=1))]
126:	proc  4 (scriptWorkerThread:1) mainThreads.pml:366 (state 179)	[i = 0]
127:	proc  4 (scriptWorkerThread:1) mainThreads.pml:367 (state 180)	[(((i<2)&&mThreads[i]))]
127:	proc  4 (scriptWorkerThread:1) mainThreads.pml:367 (state 181)	[i = (i+1)]
128:	proc  4 (scriptWorkerThread:1) mainThreads.pml:368 (state 182)	[(((i<2)&&!(mThreads[i])))]
128:	proc  4 (scriptWorkerThread:1) mainThreads.pml:368 (state 183)	[threadId = i]
129:	proc  4 (scriptWorkerThread:1) mainThreads.pml:366 (state 190)	[break]
Starting engineThread with pid 6
130:	proc  4 (scriptWorkerThread:1) mainThreads.pml:425 (state 192)	[(run engineThread(myThread))]
132:	proc  4 (scriptWorkerThread:1) mainThreads.pml:427 (state 194)	[mFinishedThreads[myThread] = 0]
134:	proc  4 (scriptWorkerThread:1) mainThreads.pml:100 (state 195)	[assert((mThreadsMutex==0))]
134:	proc  4 (scriptWorkerThread:1) mainThreads.pml:101 (state 196)	[assert(!(mutexInfo[1].forThread[_pid]))]
134:	proc  4 (scriptWorkerThread:1) mainThreads.pml:102 (state 197)	[mutexInfo[1].forThread[_pid] = 1]
134:	proc  4 (scriptWorkerThread:1) mainThreads.pml:103 (state 198)	[mThreadsMutex = (mThreadsMutex+1)]
                          unlocked
134:	proc  4 (scriptWorkerThread:1) mainThreads.pml:104 (state 199)	[printf('unlocked\\n')]
                          emit136:	proc  4 (scriptWorkerThread:1) mainThreads.pml:81 (state 202)	[printf('emit')]
138:	proc  4 (scriptWorkerThread:1) mainThreads.pml:82 (state 203) <valid end state>	[engineThreadEvents[myThread]!6]
140:	proc  5 (engineThread:1) mainThreads.pml:520 (state 1)	[engineThreadEvents[id]?signal]
142:	proc  5 (engineThread:1) mainThreads.pml:522 (state 2)	[((signal==start))]
                              Started thread ScriptThread142:	proc  5 (engineThread:1) mainThreads.pml:523 (state 3)	[printf('Started thread ScriptThread')]
                              
142:	proc  5 (engineThread:1) mainThreads.pml:523 (state 4)	[printf('\\n')]
144:	proc  5 (engineThread:1) mainThreads.pml:524 (state 5)	[(1)]
146:	proc  5 (engineThread:1) mainThreads.pml:529 (state 6)	[(!(abortEvaluationInvoked[id]))]
                              script_run
148:	proc  5 (engineThread:1) mainThreads.pml:224 (state 212)	[printf('script_run\\n')]
150:	proc  5 (engineThread:1) mainThreads.pml:225 (state 213)	[mInEventDrivenMode = 1]
152:	proc  5 (engineThread:1) mainThreads.pml:529 (state 6)	[(!(abortEvaluationInvoked[id]))]
                              script_run
154:	proc  5 (engineThread:1) mainThreads.pml:224 (state 212)	[printf('script_run\\n')]
                          Threading: started thread ... with engine ... thread object ...156:	proc  4 (scriptWorkerThread:1) mainThreads.pml:433 (state 205)	[printf('Threading: started thread ... with engine ... thread object ...')]
                          
156:	proc  4 (scriptWorkerThread:1) mainThreads.pml:433 (state 206)	[printf('\\n')]
158:	proc  5 (engineThread:1) mainThreads.pml:225 (state 213)	[mInEventDrivenMode = 1]
160:	proc  5 (engineThread:1) mainThreads.pml:529 (state 6)	[(!(abortEvaluationInvoked[id]))]
162:	proc  5 (engineThread:1) mainThreads.pml:545 (state 215)	[goto :b2]
164:	proc  5 (engineThread:1) mainThreads.pml:549 (state 223)	[(1)]
166:	proc  5 (engineThread:1) mainThreads.pml:552 (state 227)	[else]
168:	proc  5 (engineThread:1) mainThreads.pml:554 (state 228)	[(mInEventDrivenMode)]
170:	proc  4 (scriptWorkerThread:1) mainThreads.pml:100 (state 207)	[assert((mResetMutex==0))]
170:	proc  4 (scriptWorkerThread:1) mainThreads.pml:101 (state 208)	[assert(!(mutexInfo[0].forThread[_pid]))]
170:	proc  4 (scriptWorkerThread:1) mainThreads.pml:102 (state 209)	[mutexInfo[0].forThread[_pid] = 1]
170:	proc  4 (scriptWorkerThread:1) mainThreads.pml:103 (state 210)	[mResetMutex = (mResetMutex+1)]
                          unlocked
170:	proc  4 (scriptWorkerThread:1) mainThreads.pml:104 (state 211)	[printf('unlocked\\n')]
172:	proc  4 (scriptWorkerThread:1) mainThreads.pml:435 (state 214)	[(1)]
                          startThread_return
172:	proc  4 (scriptWorkerThread:1) mainThreads.pml:436 (state 215)	[printf('startThread_return\\n')]
174:	proc  4 (scriptWorkerThread:1) mainThreads.pml:603 (state 217)	[mState = 3]
176:	proc  2 (GUIThread:1) mainThreads.pml:346 (state 24)	[((mState!=1))]
                  ScriptEngineWorker: stopping script178:	proc  2 (GUIThread:1) mainThreads.pml:350 (state 29)	[printf('ScriptEngineWorker: stopping script')]
                  
178:	proc  2 (GUIThread:1) mainThreads.pml:350 (state 30)	[printf('\\n')]
180:	proc  2 (GUIThread:1) mainThreads.pml:351 (state 31)	[mState = 2]
                  script_reset
182:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 32)	[printf('script_reset\\n')]
184:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 33)	[mInEventDrivenMode = 0]
186:	proc  2 (GUIThread:1) mainThreads.pml:242 (state 34)	[loopStopWaiting = 1]
                  threading_reset_call
188:	proc  2 (GUIThread:1) mainThreads.pml:279 (state 36)	[printf('threading_reset_call\\n')]
190:	proc  2 (GUIThread:1) mainThreads.pml:280 (state 37)	[(1)]
192:	proc  2 (GUIThread:1) mainThreads.pml:88 (state 38)	[assert(mutexInfo[0].forThread[_pid])]
193:	proc  2 (GUIThread:1) mainThreads.pml:89 (state 39)	[((mResetMutex==1))]
193:	proc  2 (GUIThread:1) mainThreads.pml:90 (state 40)	[mutexInfo[0].forThread[_pid] = 0]
193:	proc  2 (GUIThread:1) mainThreads.pml:91 (state 41)	[mResetMutex = (mResetMutex-1)]
                  locked
193:	proc  2 (GUIThread:1) mainThreads.pml:92 (state 42)	[printf('locked\\n')]
194:	proc  2 (GUIThread:1) mainThreads.pml:135 (state 53)	[else]
195:	proc  2 (GUIThread:1) mainThreads.pml:135 (state 54)	[(1)]
196:	proc  2 (GUIThread:1) mainThreads.pml:285 (state 60)	[else]
197:	proc  2 (GUIThread:1) mainThreads.pml:285 (state 61)	[(1)]
Never claim moves to line 720	[((!((GUIThread._p==mResetStarted_exit))&&(GUIThread._p==mResetStarted_enter)))]
199:	proc  2 (GUIThread:1) mainThreads.pml:288 (state 65)	[mResetStarted = 1]
Never claim moves to line 726	[(!((GUIThread._p==mResetStarted_exit)))]
201:	proc  2 (GUIThread:1) mainThreads.pml:100 (state 66)	[assert((mResetMutex==0))]
201:	proc  2 (GUIThread:1) mainThreads.pml:101 (state 67)	[assert(!(mutexInfo[0].forThread[_pid]))]
201:	proc  2 (GUIThread:1) mainThreads.pml:102 (state 68)	[mutexInfo[0].forThread[_pid] = 1]
201:	proc  2 (GUIThread:1) mainThreads.pml:103 (state 69)	[mResetMutex = (mResetMutex+1)]
                  unlocked
201:	proc  2 (GUIThread:1) mainThreads.pml:104 (state 70)	[printf('unlocked\\n')]
                  Threading: reset started201:	proc  2 (GUIThread:1) mainThreads.pml:290 (state 73)	[printf('Threading: reset started')]
                  
201:	proc  2 (GUIThread:1) mainThreads.pml:290 (state 74)	[printf('\\n')]
203:	proc  2 (GUIThread:1) mainThreads.pml:88 (state 75)	[assert(mutexInfo[1].forThread[_pid])]
204:	proc  2 (GUIThread:1) mainThreads.pml:89 (state 76)	[((mThreadsMutex==1))]
204:	proc  2 (GUIThread:1) mainThreads.pml:90 (state 77)	[mutexInfo[1].forThread[_pid] = 0]
204:	proc  2 (GUIThread:1) mainThreads.pml:91 (state 78)	[mThreadsMutex = (mThreadsMutex-1)]
                  locked
204:	proc  2 (GUIThread:1) mainThreads.pml:92 (state 79)	[printf('locked\\n')]
204:	proc  2 (GUIThread:1) mainThreads.pml:295 (state 82)	[k = 0]
206:	proc  2 (GUIThread:1) mainThreads.pml:296 (state 83)	[((k<2))]
208:	proc  2 (GUIThread:1) mainThreads.pml:298 (state 84)	[(mThreads[k])]
                  script_reset
210:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 85)	[printf('script_reset\\n')]
212:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 86)	[mInEventDrivenMode = 0]
214:	proc  2 (GUIThread:1) mainThreads.pml:242 (state 87)	[loopStopWaiting = 1]
216:	proc  2 (GUIThread:1) mainThreads.pml:141 (state 89)	[abortEvaluationInvoked[k] = 1]
218:	proc  4 (scriptWorkerThread:1) mainThreads.pml:604 (state 218)	[(1)]
                  emit220:	proc  2 (GUIThread:1) mainThreads.pml:81 (state 90)	[printf('emit')]
222:	proc  2 (GUIThread:1) mainThreads.pml:82 (state 91) <valid end state>	[engineThreadEvents[k]!3]
224:	proc  5 (engineThread:1) mainThreads.pml:474 (state 229)	[temp = 0]
225:	proc  5 (engineThread:1) mainThreads.pml:476 (state 232)	[(nempty(engineThreadEvents[id]))]
226:	proc  5 (engineThread:1) mainThreads.pml:477 (state 233)	[engineThreadEvents[id]?temp]
227:	proc  5 (engineThread:1) mainThreads.pml:479 (state 234)	[((temp==3))]
228:	proc  5 (engineThread:1) mainThreads.pml:475 (state 230)	[(empty(engineThreadEvents[id]))]
229:	proc  5 (engineThread:1) mainThreads.pml:484 (state 242)	[(empty(tmpQueue))]
230:	proc  5 (engineThread:1) mainThreads.pml:483 (state 249)	[break]
232:	proc  2 (GUIThread:1) mainThreads.pml:303 (state 98)	[k = (k+1)]
234:	proc  2 (GUIThread:1) mainThreads.pml:296 (state 83)	[((k<2))]
236:	proc  2 (GUIThread:1) mainThreads.pml:301 (state 94)	[else]
238:	proc  2 (GUIThread:1) mainThreads.pml:301 (state 95)	[(1)]
238:	proc  2 (GUIThread:1) mainThreads.pml:303 (state 98)	[k = (k+1)]
240:	proc  2 (GUIThread:1) mainThreads.pml:304 (state 99)	[else]
242:	proc  2 (GUIThread:1) mainThreads.pml:212 (state 104)	[assert((2>0))]
242:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 105)	[i = 0]
243:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 106)	[((i<2))]
243:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 107)	[mFinishedThreads[i] = 0]
243:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 108)	[i = (i+1)]
244:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 106)	[((i<2))]
244:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 107)	[mFinishedThreads[i] = 0]
244:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 108)	[i = (i+1)]
245:	proc  2 (GUIThread:1) mainThreads.pml:216 (state 109)	[((i==2))]
246:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 113)	[break]
                  cleared
247:	proc  2 (GUIThread:1) mainThreads.pml:218 (state 114)	[printf('cleared\\n')]
249:	proc  2 (GUIThread:1) mainThreads.pml:100 (state 117)	[assert((mThreadsMutex==0))]
249:	proc  2 (GUIThread:1) mainThreads.pml:101 (state 118)	[assert(!(mutexInfo[1].forThread[_pid]))]
249:	proc  2 (GUIThread:1) mainThreads.pml:102 (state 119)	[mutexInfo[1].forThread[_pid] = 1]
249:	proc  2 (GUIThread:1) mainThreads.pml:103 (state 120)	[mThreadsMutex = (mThreadsMutex+1)]
                  unlocked
249:	proc  2 (GUIThread:1) mainThreads.pml:104 (state 121)	[printf('unlocked\\n')]
                  script_reset
251:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 124)	[printf('script_reset\\n')]
253:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 125)	[mInEventDrivenMode = 0]
255:	proc  2 (GUIThread:1) mainThreads.pml:242 (state 126)	[loopStopWaiting = 1]
  <<<<<START OF CYCLE>>>>>
spin: trail ends after 258 steps
#processes: 6
		mState = 2
		mInEventDrivenMode = 0
		mResetMutex = 1
		mResetStarted = 1
		mThreadsMutex = 1
		mFinishedThreads[0] = 0
		mFinishedThreads[1] = 0
		mPreventFromStart[0] = 0
		mPreventFromStart[1] = 0
		mThreads[0] = 1
		mThreads[1] = 0
		threadId = 1
		queue 1 (GUIThreadEvents): 
		queue 2 (scriptWorkerThreadEvents): 
		queue 5 (engineThreadEvents[0]): 
		queue 6 (engineThreadEvents[1]): 
		abortEvaluationInvoked[0] = 1
		abortEvaluationInvoked[1] = 0
		mThreadCount = 1
		timerTimeout = 0
		loopStopWaiting = 1
		mErrorMessage = 0
		RunningWidget = 1
		mutexInfo[0].forThread[0] = 1
		mutexInfo[0].forThread[1] = 1
		mutexInfo[0].forThread[2] = 1
		mutexInfo[0].forThread[3] = 1
		mutexInfo[0].forThread[4] = 1
		mutexInfo[0].forThread[5] = 1
		mutexInfo[0].forThread[6] = 1
		mutexInfo[1].forThread[0] = 1
		mutexInfo[1].forThread[1] = 1
		mutexInfo[1].forThread[2] = 1
		mutexInfo[1].forThread[3] = 1
		mutexInfo[1].forThread[4] = 1
		mutexInfo[1].forThread[5] = 1
		mutexInfo[1].forThread[6] = 1
258:	proc  5 (engineThread:1) mainThreads.pml:557 (state 252) <valid end state>
258:	proc  4 (scriptWorkerThread:1) mainThreads.pml:605 (state 219) <valid end state>
258:	proc  3 (User:1) mainThreads.pml:686 (state 17) <valid end state>
258:	proc  2 (GUIThread:1) mainThreads.pml:311 (state 128)
258:	proc  1 (ExceptionHandler:1) mainThreads.pml:693 (state 5) <valid end state>
258:	proc  0 (:init::1) mainThreads.pml:713 (state 4) <valid end state>
258:	proc  - (never_0:1) mainThreads.pml:725 (state 16)
6 processes created

-----------------------------------------------------------------------------------------------
--------------------- Итог: если "быстро" сработает aboort() или новый run(), -----------------
--------------------- то может зависнуть гуи тред, так как до того, как будет луп, ------------
--------------------- испустятся сигналы "прекращения лупа", а основной поток будет ждать, ----
--------------------- пока работают все потоки. -----------------------------------------------
-----------------------------------------------------------------------------------------------
--------------------- В модели для этого трейла были для удобства представления ---------------
--------------------- закомментированы некоторые возможные вызовы в скрипте. ------------------
--------------------- (ну и съехало на 1 строчку) ---------------------------------------------
-----------------------------------------------------------------------------------------------