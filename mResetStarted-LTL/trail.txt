-----------------------------------------------------------------------------------------------
---------------------  /* !([](p1 -> ((<>p2) && (p3 U p2)))) */ -------------------------------
--------------------- #define p1 GUIThread@mResetStarted_enter --------------------------------
--------------------- #define p2 GUIThread@mResetStarted_exit ---------------------------------
--------------------- #define p3 mResetStarted ------------------------------------------------
-----------------------------------------------------------------------------------------------

starting claim 9
using statement merging
Never claim moves to line 721	[(1)]
Starting ExceptionHandler with pid 2
  2:	proc  0 (:init::1) mainThreads.pml:709 (state 1)	[(run ExceptionHandler())]
Starting GUIThread with pid 3
  4:	proc  0 (:init::1) mainThreads.pml:710 (state 2)	[(run GUIThread())]
                  TrikGui started  6:	proc  2 (GUIThread:1) mainThreads.pml:621 (state 1)	[printf('TrikGui started')]
                  
  6:	proc  2 (GUIThread:1) mainThreads.pml:621 (state 2)	[printf('\\n')]
  8:	proc  2 (GUIThread:1) mainThreads.pml:622 (state 3)	[mInEventDrivenMode = 0]
 10:	proc  2 (GUIThread:1) mainThreads.pml:623 (state 4)	[RunningWidget = 0]
                  Starting TrikScriptRunner worker thread 12:	proc  2 (GUIThread:1) mainThreads.pml:629 (state 5)	[printf('Starting TrikScriptRunner worker thread')]
                  
 12:	proc  2 (GUIThread:1) mainThreads.pml:629 (state 6)	[printf('\\n')]
Starting scriptWorkerThread with pid 4
 14:	proc  2 (GUIThread:1) mainThreads.pml:631 (state 7)	[(run scriptWorkerThread())]
 15:	proc  2 (GUIThread:1) mainThreads.pml:632 (state 8)	[mResetStarted = 0]
 15:	proc  2 (GUIThread:1) mainThreads.pml:633 (state 9)	[mState = 0]
Starting User with pid 5
 17:	proc  0 (:init::1) mainThreads.pml:711 (state 3)	[(run User())]
                          emit 19:	proc  4 (User:1) mainThreads.pml:80 (state 1)	[printf('emit')]
 21:	proc  4 (User:1) mainThreads.pml:81 (state 2) <valid end state>	[GUIThreadEvents!5]
                          emit 23:	proc  4 (User:1) mainThreads.pml:80 (state 9)	[printf('emit')]
 25:	proc  4 (User:1) mainThreads.pml:81 (state 10) <valid end state>	[GUIThreadEvents!5]
 27:	proc  4 (User:1) mainThreads.pml:685 (state 17) <valid end state>	[((_nr_pr==((7-2)+1)))]
 29:	proc  2 (GUIThread:1) mainThreads.pml:636 (state 11)	[GUIThreadEvents?signal]
 31:	proc  2 (GUIThread:1) mainThreads.pml:638 (state 12)	[((signal==runScript))]
                  TrikScriptRunner: new script 31:	proc  2 (GUIThread:1) mainThreads.pml:640 (state 13)	[printf('TrikScriptRunner: new script')]
                  
 31:	proc  2 (GUIThread:1) mainThreads.pml:640 (state 14)	[printf('\\n')]
                  stopScript_call
 33:	proc  2 (GUIThread:1) mainThreads.pml:339 (state 15)	[printf('stopScript_call\\n')]
 35:	proc  2 (GUIThread:1) mainThreads.pml:340 (state 16)	[(1)]
 37:	proc  2 (GUIThread:1) mainThreads.pml:343 (state 19)	[((mState==0))]
 39:	proc  2 (GUIThread:1) mainThreads.pml:358 (state 138)	[(1)]
                  stopScript_return
 39:	proc  2 (GUIThread:1) mainThreads.pml:359 (state 139)	[printf('stopScript_return\\n')]
                  ScriptEngineWorker: starting script 39:	proc  2 (GUIThread:1) mainThreads.pml:644 (state 141)	[printf('ScriptEngineWorker: starting script')]
                  
 39:	proc  2 (GUIThread:1) mainThreads.pml:644 (state 142)	[printf('\\n')]
 41:	proc  2 (GUIThread:1) mainThreads.pml:645 (state 143)	[mState = 1]
 43:	proc  2 (GUIThread:1) mainThreads.pml:648 (state 144)	[RunningWidget = 1]
 44:	proc  2 (GUIThread:1) mainThreads.pml:649 (state 145)	[(1)]
 46:	proc  2 (GUIThread:1) mainThreads.pml:652 (state 147)	[threadId = 0]
 47:	proc  2 (GUIThread:1) mainThreads.pml:211 (state 148)	[assert((2>0))]
 47:	proc  2 (GUIThread:1) mainThreads.pml:213 (state 149)	[i = 0]
 48:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 150)	[((i<2))]
 48:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 151)	[abortEvaluationInvoked[i] = 0]
 48:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 152)	[i = (i+1)]
 49:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 150)	[((i<2))]
 49:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 151)	[abortEvaluationInvoked[i] = 0]
 49:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 152)	[i = (i+1)]
 50:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 153)	[((i==2))]
                  cleared
 50:	proc  2 (GUIThread:1) mainThreads.pml:217 (state 158)	[printf('cleared\\n')]
                  emit 51:	proc  2 (GUIThread:1) mainThreads.pml:80 (state 161)	[printf('emit')]
 52:	proc  2 (GUIThread:1) mainThreads.pml:81 (state 162) <valid end state>	[scriptWorkerThreadEvents!8]
 54:	proc  3 (scriptWorkerThread:1) mainThreads.pml:591 (state 1)	[scriptWorkerThreadEvents?signal]
 56:	proc  3 (scriptWorkerThread:1) mainThreads.pml:593 (state 2)	[((signal==INVOKEdoRun))]
 58:	proc  3 (scriptWorkerThread:1) mainThreads.pml:595 (state 3)	[mErrorMessage = 0]
 60:	proc  3 (scriptWorkerThread:1) mainThreads.pml:211 (state 4)	[assert((2>0))]
 60:	proc  3 (scriptWorkerThread:1) mainThreads.pml:213 (state 5)	[i = 0]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 6)	[((i<2))]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 7)	[mFinishedThreads[i] = 0]
 61:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 8)	[i = (i+1)]
 62:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 6)	[((i<2))]
 62:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 7)	[mFinishedThreads[i] = 0]
 62:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 8)	[i = (i+1)]
 63:	proc  3 (scriptWorkerThread:1) mainThreads.pml:215 (state 9)	[((i==2))]
 64:	proc  3 (scriptWorkerThread:1) mainThreads.pml:213 (state 13)	[break]
                      cleared
 65:	proc  3 (scriptWorkerThread:1) mainThreads.pml:217 (state 14)	[printf('cleared\\n')]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:211 (state 17)	[assert((2>0))]
 67:	proc  3 (scriptWorkerThread:1) mainThreads.pml:213 (state 18)	[i = 0]
 68:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 19)	[((i<2))]
 68:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 20)	[mPreventFromStart[i] = 0]
 68:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 21)	[i = (i+1)]
 69:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 19)	[((i<2))]
 69:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 20)	[mPreventFromStart[i] = 0]
 69:	proc  3 (scriptWorkerThread:1) mainThreads.pml:214 (state 21)	[i = (i+1)]
 70:	proc  3 (scriptWorkerThread:1) mainThreads.pml:215 (state 22)	[((i==2))]
 71:	proc  3 (scriptWorkerThread:1) mainThreads.pml:213 (state 26)	[break]
                      cleared
 72:	proc  3 (scriptWorkerThread:1) mainThreads.pml:217 (state 27)	[printf('cleared\\n')]
 74:	proc  3 (scriptWorkerThread:1) mainThreads.pml:598 (state 30)	[timerTimeout = 0]
 76:	proc  3 (scriptWorkerThread:1) mainThreads.pml:599 (state 31)	[loopStopWaiting = 0]
                      evalSystemJs_call
 78:	proc  3 (scriptWorkerThread:1) mainThreads.pml:440 (state 32)	[printf('evalSystemJs_call\\n')]
 80:	proc  3 (scriptWorkerThread:1) mainThreads.pml:109 (state 33)	[catch!11]
 81:	proc  1 (ExceptionHandler:1) mainThreads.pml:695 (state 1)	[catch?FailedToOpenFileException]
 83:	proc  2 (GUIThread:1) mainThreads.pml:636 (state 11)	[GUIThreadEvents?signal]
 85:	proc  2 (GUIThread:1) mainThreads.pml:638 (state 12)	[((signal==runScript))]
                  TrikScriptRunner: new script 85:	proc  2 (GUIThread:1) mainThreads.pml:640 (state 13)	[printf('TrikScriptRunner: new script')]
                  
 85:	proc  2 (GUIThread:1) mainThreads.pml:640 (state 14)	[printf('\\n')]
                  stopScript_call
 87:	proc  2 (GUIThread:1) mainThreads.pml:339 (state 15)	[printf('stopScript_call\\n')]
 89:	proc  2 (GUIThread:1) mainThreads.pml:340 (state 16)	[(1)]
 91:	proc  2 (GUIThread:1) mainThreads.pml:345 (state 23)	[((mState==1))]
 93:	proc  1 (ExceptionHandler:1) mainThreads.pml:697 (state 2)	[catch!returnControl]
 94:	proc  3 (scriptWorkerThread:1) mainThreads.pml:445 (state 35)	[catch?returnControl]
 96:	proc  3 (scriptWorkerThread:1) mainThreads.pml:449 (state 39)	[(1)]
                      evalSystemJs_return
 96:	proc  3 (scriptWorkerThread:1) mainThreads.pml:455 (state 48)	[printf('evalSystemJs_return\\n')]
                      startThread_call
 98:	proc  3 (scriptWorkerThread:1) mainThreads.pml:374 (state 50)	[printf('startThread_call\\n')]
100:	proc  3 (scriptWorkerThread:1) mainThreads.pml:375 (state 51)	[(1)]
100:	proc  3 (scriptWorkerThread:1) mainThreads.pml:377 (state 52)	[tmp = 0]
102:	proc  3 (scriptWorkerThread:1) mainThreads.pml:115 (state 53)	[assert((-(1)<=(2-1)))]
102:	proc  3 (scriptWorkerThread:1) mainThreads.pml:116 (state 54)	[tmp = -(1)]
103:	proc  3 (scriptWorkerThread:1) mainThreads.pml:118 (state 55)	[((tmp<(2-1)))]
104:	proc  3 (scriptWorkerThread:1) mainThreads.pml:120 (state 56)	[goto :b18]
105:	proc  3 (scriptWorkerThread:1) mainThreads.pml:117 (state 64)	[break]
                      random_return
106:	proc  3 (scriptWorkerThread:1) mainThreads.pml:125 (state 65)	[printf('random_return\\n')]
108:	proc  3 (scriptWorkerThread:1) mainThreads.pml:87 (state 68)	[assert(mutexInfo[0].forThread[_pid])]
109:	proc  3 (scriptWorkerThread:1) mainThreads.pml:88 (state 69)	[((mResetMutex==1))]
109:	proc  3 (scriptWorkerThread:1) mainThreads.pml:89 (state 70)	[mutexInfo[0].forThread[_pid] = 0]
109:	proc  3 (scriptWorkerThread:1) mainThreads.pml:90 (state 71)	[mResetMutex = (mResetMutex-1)]
                      locked
109:	proc  3 (scriptWorkerThread:1) mainThreads.pml:91 (state 72)	[printf('locked\\n')]
111:	proc  3 (scriptWorkerThread:1) mainThreads.pml:385 (state 87)	[else]
113:	proc  3 (scriptWorkerThread:1) mainThreads.pml:385 (state 88)	[(1)]
115:	proc  3 (scriptWorkerThread:1) mainThreads.pml:87 (state 91)	[assert(mutexInfo[1].forThread[_pid])]
116:	proc  3 (scriptWorkerThread:1) mainThreads.pml:88 (state 92)	[((mThreadsMutex==1))]
116:	proc  3 (scriptWorkerThread:1) mainThreads.pml:89 (state 93)	[mutexInfo[1].forThread[_pid] = 0]
116:	proc  3 (scriptWorkerThread:1) mainThreads.pml:90 (state 94)	[mThreadsMutex = (mThreadsMutex-1)]
                      locked
116:	proc  3 (scriptWorkerThread:1) mainThreads.pml:91 (state 95)	[printf('locked\\n')]
118:	proc  3 (scriptWorkerThread:1) mainThreads.pml:396 (state 122)	[else]
120:	proc  3 (scriptWorkerThread:1) mainThreads.pml:396 (state 123)	[(1)]
122:	proc  3 (scriptWorkerThread:1) mainThreads.pml:406 (state 146)	[else]
124:	proc  3 (scriptWorkerThread:1) mainThreads.pml:406 (state 147)	[(1)]
                      Starting new thread ... with engine ...124:	proc  3 (scriptWorkerThread:1) mainThreads.pml:408 (state 150)	[printf('Starting new thread ... with engine ...')]
                      
124:	proc  3 (scriptWorkerThread:1) mainThreads.pml:408 (state 151)	[printf('\\n')]
124:	proc  3 (scriptWorkerThread:1) mainThreads.pml:410 (state 152)	[myThread = 0]
126:	proc  0 (:init::1) mainThreads.pml:712 (state 4) <valid end state>	[((_nr_pr==((7-2)+1)))]
128:	proc  3 (scriptWorkerThread:1) mainThreads.pml:414 (state 169)	[(((threadId!=-(1))&&(_nr_pr<7)))]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:414 (state 170)	[(1)]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:417 (state 173)	[myThread = threadId]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:418 (state 174)	[mThreads[myThread] = 1]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:419 (state 175)	[abortEvaluationInvoked[myThread] = 0]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:420 (state 176)	[mThreadCount = (mThreadCount+1)]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:421 (state 177)	[assert((mThreadCount<=2))]
129:	proc  3 (scriptWorkerThread:1) mainThreads.pml:422 (state 178)	[assert((mThreadCount>=1))]
130:	proc  3 (scriptWorkerThread:1) mainThreads.pml:365 (state 179)	[i = 0]
131:	proc  3 (scriptWorkerThread:1) mainThreads.pml:366 (state 180)	[(((i<2)&&mThreads[i]))]
131:	proc  3 (scriptWorkerThread:1) mainThreads.pml:366 (state 181)	[i = (i+1)]
132:	proc  3 (scriptWorkerThread:1) mainThreads.pml:367 (state 182)	[(((i<2)&&!(mThreads[i])))]
132:	proc  3 (scriptWorkerThread:1) mainThreads.pml:367 (state 183)	[threadId = i]
133:	proc  3 (scriptWorkerThread:1) mainThreads.pml:365 (state 190)	[break]
Starting engineThread with pid 6
134:	proc  3 (scriptWorkerThread:1) mainThreads.pml:424 (state 192)	[(run engineThread(myThread))]
136:	proc  3 (scriptWorkerThread:1) mainThreads.pml:426 (state 194)	[mFinishedThreads[myThread] = 0]
138:	proc  3 (scriptWorkerThread:1) mainThreads.pml:99 (state 195)	[assert((mThreadsMutex==0))]
138:	proc  3 (scriptWorkerThread:1) mainThreads.pml:100 (state 196)	[assert(!(mutexInfo[1].forThread[_pid]))]
138:	proc  3 (scriptWorkerThread:1) mainThreads.pml:101 (state 197)	[mutexInfo[1].forThread[_pid] = 1]
138:	proc  3 (scriptWorkerThread:1) mainThreads.pml:102 (state 198)	[mThreadsMutex = (mThreadsMutex+1)]
                      unlocked
138:	proc  3 (scriptWorkerThread:1) mainThreads.pml:103 (state 199)	[printf('unlocked\\n')]
                      emit140:	proc  3 (scriptWorkerThread:1) mainThreads.pml:80 (state 202)	[printf('emit')]
142:	proc  3 (scriptWorkerThread:1) mainThreads.pml:81 (state 203) <valid end state>	[engineThreadEvents[myThread]!6]
144:	proc  5 (engineThread:1) mainThreads.pml:519 (state 1)	[engineThreadEvents[id]?signal]
146:	proc  5 (engineThread:1) mainThreads.pml:521 (state 2)	[((signal==start))]
                              Started thread ScriptThread146:	proc  5 (engineThread:1) mainThreads.pml:522 (state 3)	[printf('Started thread ScriptThread')]
                              
146:	proc  5 (engineThread:1) mainThreads.pml:522 (state 4)	[printf('\\n')]
                      Threading: started thread ... with engine ... thread object ...148:	proc  3 (scriptWorkerThread:1) mainThreads.pml:432 (state 205)	[printf('Threading: started thread ... with engine ... thread object ...')]
                      
148:	proc  3 (scriptWorkerThread:1) mainThreads.pml:432 (state 206)	[printf('\\n')]
150:	proc  3 (scriptWorkerThread:1) mainThreads.pml:99 (state 207)	[assert((mResetMutex==0))]
150:	proc  3 (scriptWorkerThread:1) mainThreads.pml:100 (state 208)	[assert(!(mutexInfo[0].forThread[_pid]))]
150:	proc  3 (scriptWorkerThread:1) mainThreads.pml:101 (state 209)	[mutexInfo[0].forThread[_pid] = 1]
150:	proc  3 (scriptWorkerThread:1) mainThreads.pml:102 (state 210)	[mResetMutex = (mResetMutex+1)]
                      unlocked
150:	proc  3 (scriptWorkerThread:1) mainThreads.pml:103 (state 211)	[printf('unlocked\\n')]
152:	proc  3 (scriptWorkerThread:1) mainThreads.pml:434 (state 214)	[(1)]
                      startThread_return
152:	proc  3 (scriptWorkerThread:1) mainThreads.pml:435 (state 215)	[printf('startThread_return\\n')]
154:	proc  3 (scriptWorkerThread:1) mainThreads.pml:602 (state 217)	[mState = 3]
156:	proc  2 (GUIThread:1) mainThreads.pml:345 (state 24)	[((mState!=1))]
                  ScriptEngineWorker: stopping script158:	proc  2 (GUIThread:1) mainThreads.pml:349 (state 29)	[printf('ScriptEngineWorker: stopping script')]
                  
158:	proc  2 (GUIThread:1) mainThreads.pml:349 (state 30)	[printf('\\n')]
160:	proc  2 (GUIThread:1) mainThreads.pml:350 (state 31)	[mState = 2]
                  script_reset
162:	proc  2 (GUIThread:1) mainThreads.pml:239 (state 32)	[printf('script_reset\\n')]
164:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 33)	[mInEventDrivenMode = 0]
166:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 34)	[loopStopWaiting = 1]
                  threading_reset_call
168:	proc  2 (GUIThread:1) mainThreads.pml:278 (state 36)	[printf('threading_reset_call\\n')]
170:	proc  2 (GUIThread:1) mainThreads.pml:279 (state 37)	[(1)]
172:	proc  2 (GUIThread:1) mainThreads.pml:87 (state 38)	[assert(mutexInfo[0].forThread[_pid])]
173:	proc  2 (GUIThread:1) mainThreads.pml:88 (state 39)	[((mResetMutex==1))]
173:	proc  2 (GUIThread:1) mainThreads.pml:89 (state 40)	[mutexInfo[0].forThread[_pid] = 0]
173:	proc  2 (GUIThread:1) mainThreads.pml:90 (state 41)	[mResetMutex = (mResetMutex-1)]
                  locked
173:	proc  2 (GUIThread:1) mainThreads.pml:91 (state 42)	[printf('locked\\n')]
174:	proc  2 (GUIThread:1) mainThreads.pml:134 (state 53)	[else]
175:	proc  2 (GUIThread:1) mainThreads.pml:134 (state 54)	[(1)]
176:	proc  2 (GUIThread:1) mainThreads.pml:284 (state 60)	[else]
177:	proc  2 (GUIThread:1) mainThreads.pml:284 (state 61)	[(1)]
spin: mainThreads.pml:720, Error: assertion violated
spin: text of failed assertion: assert(!(((!((GUIThread._p==mResetStarted_exit))&&!(mResetStarted))&&(GUIThread._p==mResetStarted_enter))))
Never claim moves to line 720	[assert(!(((!((GUIThread._p==mResetStarted_exit))&&!(mResetStarted))&&(GUIThread._p==mResetStarted_enter))))]
179:	proc  5 (engineThread:1) mainThreads.pml:523 (state 5)	[(1)]
spin: mainThreads.pml:720, Error: assertion violated
spin: text of failed assertion: assert(!(((!((GUIThread._p==mResetStarted_exit))&&!(mResetStarted))&&(GUIThread._p==mResetStarted_enter))))
181:	proc  5 (engineThread:1) mainThreads.pml:528 (state 6)	[(!(abortEvaluationInvoked[id]))]
Never claim moves to line 719	[((!((GUIThread._p==mResetStarted_exit))&&(GUIThread._p==mResetStarted_enter)))]
183:	proc  2 (GUIThread:1) mainThreads.pml:287 (state 65)	[mResetStarted = 1]
Never claim moves to line 725	[(!((GUIThread._p==mResetStarted_exit)))]
185:	proc  2 (GUIThread:1) mainThreads.pml:99 (state 66)	[assert((mResetMutex==0))]
185:	proc  2 (GUIThread:1) mainThreads.pml:100 (state 67)	[assert(!(mutexInfo[0].forThread[_pid]))]
185:	proc  2 (GUIThread:1) mainThreads.pml:101 (state 68)	[mutexInfo[0].forThread[_pid] = 1]
185:	proc  2 (GUIThread:1) mainThreads.pml:102 (state 69)	[mResetMutex = (mResetMutex+1)]
                  unlocked
185:	proc  2 (GUIThread:1) mainThreads.pml:103 (state 70)	[printf('unlocked\\n')]
                  Threading: reset started185:	proc  2 (GUIThread:1) mainThreads.pml:289 (state 73)	[printf('Threading: reset started')]
                  
185:	proc  2 (GUIThread:1) mainThreads.pml:289 (state 74)	[printf('\\n')]
187:	proc  2 (GUIThread:1) mainThreads.pml:87 (state 75)	[assert(mutexInfo[1].forThread[_pid])]
188:	proc  2 (GUIThread:1) mainThreads.pml:88 (state 76)	[((mThreadsMutex==1))]
188:	proc  2 (GUIThread:1) mainThreads.pml:89 (state 77)	[mutexInfo[1].forThread[_pid] = 0]
188:	proc  2 (GUIThread:1) mainThreads.pml:90 (state 78)	[mThreadsMutex = (mThreadsMutex-1)]
                  locked
188:	proc  2 (GUIThread:1) mainThreads.pml:91 (state 79)	[printf('locked\\n')]
188:	proc  2 (GUIThread:1) mainThreads.pml:294 (state 82)	[k = 0]
190:	proc  2 (GUIThread:1) mainThreads.pml:295 (state 83)	[((k<2))]
192:	proc  2 (GUIThread:1) mainThreads.pml:297 (state 84)	[(mThreads[k])]
                  script_reset
194:	proc  2 (GUIThread:1) mainThreads.pml:239 (state 85)	[printf('script_reset\\n')]
196:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 86)	[mInEventDrivenMode = 0]
198:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 87)	[loopStopWaiting = 1]
200:	proc  2 (GUIThread:1) mainThreads.pml:140 (state 89)	[abortEvaluationInvoked[k] = 1]
                  emit202:	proc  2 (GUIThread:1) mainThreads.pml:80 (state 90)	[printf('emit')]
204:	proc  2 (GUIThread:1) mainThreads.pml:81 (state 91) <valid end state>	[engineThreadEvents[k]!3]
206:	proc  2 (GUIThread:1) mainThreads.pml:302 (state 98)	[k = (k+1)]
208:	proc  2 (GUIThread:1) mainThreads.pml:295 (state 83)	[((k<2))]
210:	proc  2 (GUIThread:1) mainThreads.pml:300 (state 94)	[else]
212:	proc  2 (GUIThread:1) mainThreads.pml:300 (state 95)	[(1)]
212:	proc  2 (GUIThread:1) mainThreads.pml:302 (state 98)	[k = (k+1)]
214:	proc  2 (GUIThread:1) mainThreads.pml:303 (state 99)	[else]
216:	proc  2 (GUIThread:1) mainThreads.pml:211 (state 104)	[assert((2>0))]
216:	proc  2 (GUIThread:1) mainThreads.pml:213 (state 105)	[i = 0]
217:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 106)	[((i<2))]
217:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 107)	[mFinishedThreads[i] = 0]
217:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 108)	[i = (i+1)]
218:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 106)	[((i<2))]
218:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 107)	[mFinishedThreads[i] = 0]
218:	proc  2 (GUIThread:1) mainThreads.pml:214 (state 108)	[i = (i+1)]
219:	proc  2 (GUIThread:1) mainThreads.pml:215 (state 109)	[((i==2))]
220:	proc  2 (GUIThread:1) mainThreads.pml:213 (state 113)	[break]
                  cleared
221:	proc  2 (GUIThread:1) mainThreads.pml:217 (state 114)	[printf('cleared\\n')]
223:	proc  2 (GUIThread:1) mainThreads.pml:99 (state 117)	[assert((mThreadsMutex==0))]
223:	proc  2 (GUIThread:1) mainThreads.pml:100 (state 118)	[assert(!(mutexInfo[1].forThread[_pid]))]
223:	proc  2 (GUIThread:1) mainThreads.pml:101 (state 119)	[mutexInfo[1].forThread[_pid] = 1]
223:	proc  2 (GUIThread:1) mainThreads.pml:102 (state 120)	[mThreadsMutex = (mThreadsMutex+1)]
                  unlocked
223:	proc  2 (GUIThread:1) mainThreads.pml:103 (state 121)	[printf('unlocked\\n')]
                              script_run
225:	proc  5 (engineThread:1) mainThreads.pml:223 (state 409)	[printf('script_run\\n')]
227:	proc  3 (scriptWorkerThread:1) mainThreads.pml:603 (state 218)	[(1)]
                  script_reset
229:	proc  2 (GUIThread:1) mainThreads.pml:239 (state 124)	[printf('script_reset\\n')]
231:	proc  2 (GUIThread:1) mainThreads.pml:240 (state 125)	[mInEventDrivenMode = 0]
233:	proc  5 (engineThread:1) mainThreads.pml:224 (state 410)	[mInEventDrivenMode = 1]
235:	proc  5 (engineThread:1) mainThreads.pml:546 (state 422)	[else]
237:	proc  5 (engineThread:1) mainThreads.pml:548 (state 427)	[(1)]
239:	proc  5 (engineThread:1) mainThreads.pml:551 (state 431)	[else]
241:	proc  5 (engineThread:1) mainThreads.pml:553 (state 432)	[(mInEventDrivenMode)]
243:	proc  5 (engineThread:1) mainThreads.pml:473 (state 433)	[temp = 0]
244:	proc  5 (engineThread:1) mainThreads.pml:475 (state 436)	[(nempty(engineThreadEvents[id]))]
245:	proc  5 (engineThread:1) mainThreads.pml:476 (state 437)	[engineThreadEvents[id]?temp]
246:	proc  5 (engineThread:1) mainThreads.pml:478 (state 438)	[((temp==3))]
247:	proc  5 (engineThread:1) mainThreads.pml:474 (state 434)	[(empty(engineThreadEvents[id]))]
248:	proc  5 (engineThread:1) mainThreads.pml:483 (state 446)	[(empty(tmpQueue))]
249:	proc  5 (engineThread:1) mainThreads.pml:482 (state 453)	[break]
251:	proc  2 (GUIThread:1) mainThreads.pml:241 (state 126)	[loopStopWaiting = 1]
  <<<<<START OF CYCLE>>>>>
spin: trail ends after 254 steps
#processes: 6
		mState = 2
		mInEventDrivenMode = 1
		mResetMutex = 1
		mResetStarted = 1
		mThreadsMutex = 1
		mFinishedThreads[0] = 0
		mFinishedThreads[1] = 0
		mPreventFromStart[0] = 0
		mPreventFromStart[1] = 0
		mThreads[0] = 1
		mThreads[1] = 0
		threadId = 1
		queue 1 (GUIThreadEvents): 
		queue 2 (scriptWorkerThreadEvents): 
		queue 5 (engineThreadEvents[0]): 
		queue 6 (engineThreadEvents[1]): 
		abortEvaluationInvoked[0] = 1
		abortEvaluationInvoked[1] = 0
		mThreadCount = 1
		timerTimeout = 0
		loopStopWaiting = 1
		mErrorMessage = 0
		RunningWidget = 1
		mutexInfo[0].forThread[0] = 1
		mutexInfo[0].forThread[1] = 1
		mutexInfo[0].forThread[2] = 1
		mutexInfo[0].forThread[3] = 1
		mutexInfo[0].forThread[4] = 1
		mutexInfo[0].forThread[5] = 1
		mutexInfo[0].forThread[6] = 1
		mutexInfo[1].forThread[0] = 1
		mutexInfo[1].forThread[1] = 1
		mutexInfo[1].forThread[2] = 1
		mutexInfo[1].forThread[3] = 1
		mutexInfo[1].forThread[4] = 1
		mutexInfo[1].forThread[5] = 1
		mutexInfo[1].forThread[6] = 1
254:	proc  5 (engineThread:1) mainThreads.pml:556 (state 456) <valid end state>
254:	proc  4 (User:1) mainThreads.pml:686 (state 18) <valid end state>
254:	proc  3 (scriptWorkerThread:1) mainThreads.pml:604 (state 219) <valid end state>
254:	proc  2 (GUIThread:1) mainThreads.pml:310 (state 128)
254:	proc  1 (ExceptionHandler:1) mainThreads.pml:692 (state 5) <valid end state>
254:	proc  0 (:init::1) mainThreads.pml:713 (state 5) <valid end state>
254:	proc  - (never_0:1) mainThreads.pml:724 (state 16)
6 processes created

-----------------------------------------------------------------------------------------------
--------------------- Итог: если "быстро" сработает aboort() или новый run(), -----------------
--------------------- то может зависнуть гуи тред, так как до того, как будет луп, ------------
--------------------- испустятся сигналы "прекращения лупа", а основной поток будет ждать, ----
--------------------- пока работают все потоки. -----------------------------------------------
-----------------------------------------------------------------------------------------------